{"version":3,"file":"can-onboard.min.js","sources":["../src/Onboard.js","../src/utils/Observable.js","../src/MaskRenderer.js","../src/PositionResolver.js","../src/utils/BoxUtils.js","../src/ArrowRenderer.js","../src/ProgressRenderer.js","../src/WindowRenderer.js","../src/OnboardRenderer.js","../src/OnboardModel.js","../src/OnboardKeyHandler.js","../src/OnboardDefaults.js"],"sourcesContent":["import Observable from \"./utils/Observable\";\nimport * as Defaults from \"./OnboardDefaults\";\nimport OnboardRenderer from \"./OnboardRenderer\";\nimport OnboardModel from \"./OnboardModel\";\nimport OnboardKeyHandler from \"./OnboardKeyHandler\";\n\n/**\n * @private \n * @param {*} optionValue option value \n * @param {*} defaultOptionValue default option value \n * @returns option or default option value \n */\nfunction getOptionValue(optionValue, defaultOptionValue) {\n\treturn typeof optionValue == \"undefined\" ? defaultOptionValue : optionValue;\n}\n\n/**\n * @class\n * Main onboard class\n * @param {Object} options\n */\nclass Onboard {\n\tconstructor(options) {\n\t\t/**\n\t\t * @private\n\t\t * Options property exposing widget's options\n\t\t */\n\t\tthis._options = {};\n\n\t\t/**\n\t\t * @public\n\t\t * fill color\n\t\t */\n\t\tthis._options.fillColor = getOptionValue(options.fillColor, Defaults.FILL_COLOR);\t\t\n\n\t\t/**\n\t\t * @public\n\t\t * fill opacity\n\t\t */\n\t\tthis._options.fillOpacity = getOptionValue(options.fillOpacity, Defaults.FILL_OPACITY);\n\n\t\t/**\n\t\t * @public\n\t\t * Next text\n\t\t */\n\t\tthis._options.nextText = getOptionValue(options.nextText, Defaults.NEXT_TEXT);\t\t\n\n\t\t/**\n\t\t * @public\n\t\t * Understand text\n\t\t */\n\t\tthis._options.windowClassName = getOptionValue(options.windowClassName, Defaults.WINDOW_CLASS_NAME);\t\t\n\n\t\t/**\n\t\t * @public\n\t\t * animation duration\n\t\t */\n\t\tthis._options.animationDuration = getOptionValue(options.animationDuration, Defaults.ANIMATION_DURATION);\t\t\n\n\t\t/**\n\t\t * @public\n\t\t * window width\n\t\t */\n\t\tthis._options.windowWidth = getOptionValue(options.windowWidth, Defaults.WINDOW_WIDTH);\t\t\t\t\n\n\t\t/**\n\t\t * @public\n\t\t * steps\n\t\t */\n\t\tthis._options.steps = options.steps;\n\n\t\t/**\n\t\t * @private\n\t\t * observable handler\n\t\t */\n\t\tthis._observable = new Observable([\n\t\t\t/**\n\t\t\t * @event start\n\t\t\t * @param {Object} step\n\t\t\t * @param {int} index\n\t\t\t */\n\t\t\t\"start\",\n\t\t\t/**\n\t\t\t * @event stop\n\t\t\t * @param {Object} step\n\t\t\t * @param {int} index\n\t\t\t */\n\t\t\t\"stop\",\n\t\t\t/**\n\t\t\t * @event step\n\t\t\t * @param {Object} step\n\t\t\t * @param {int} index\n\t\t\t */\n\t\t\t\"step\"\n\t\t]);\n\n\t\tthis._model = new OnboardModel(this._options);\n\n\t\tthis._model.on(\"start\", (step, index)=>{\n\t\t\tthis._observable.fire(\"start\", step, index)\n\t\t});\n\n\t\tthis._model.on(\"stop\", (step, index)=>{\n\t\t\tthis._observable.fire(\"stop\", step, index)\n\t\t});\n\n\t\tthis._model.on(\"step\", (step, index)=>{\n\t\t\tthis._observable.fire(\"step\", step, index)\n\t\t});\n\n\t\t/**\n\t\t * @private\n\t\t * OnboardRenderer\n\t\t */\n\t\tthis._onboardRenderer = new OnboardRenderer(this._options, this._model);\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tthis._onboardKeyHandler = new OnboardKeyHandler(this._options, this._model);\t\t\n\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Bind widget event\n\t * @param {String} event event name\n\t * @param {Function} handler event handler\n\t * @returns {Onboard} returns this widget instance\n\t */\n\ton(eventName, handler) {\n\t\tthis._observable.on(eventName, handler);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unbind widget event\n\t * @param {String} event event name\n\t * @param {Function} [handler] event handler\n\t * @returns {Onboard} returns this widget instance\n\t */\n\toff(eventName, handler) {\n\t\tthis._observable.off(eventName, handler);\n\t\treturn this;\n\t}\t\n\n\t/**\n\t * Destroys widget\n\t * @returns {Onboard} returns this widget instance\n\t */\n\tdestroy() {\n\t\tthis._observable.destroy();\n\t\tthis._onboardRenderer.destroy();\n\t\tthis._options = null;\n\t\tthis._model.destroy();\n\t\tthis._onboardKeyHandler.destroy();\n\n\t\treturn this;\n\t}\t\n\n\t/**\n\t * Render logic of this widget\n\t * @param {String|DOMElement} selector selector or DOM element \n\t * @returns {Onboard} returns this widget instance\n\t */\n\trender(selector) {\n\t\tthis._onboardRenderer.render(selector);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Starts onboarding\n\t * @returns {Onboard} returns this widget instance \n\t */\n\tstart() {\n\t\tthis._model.start();\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Stops\n\t * @returns {Onboard} returns this widget instance \n\t */\n\tstop() {\n\t\tthis._model.stop();\n\t\treturn this;\n\t}\t\n}\n\nexport default Onboard;\n","/**\r\n * @class\r\n * Observable class, handles binding and firing events\r\n * @param {Array} events list of events for this observable\r\n */\r\nexport default class Observable {\r\n    /**\r\n     * @param {Array} events\r\n     */\r\n    constructor(events = []) {\r\n        // create a map of handlers where each event has an array of bound handlers\r\n        this._handlers = events.reduce((acc, cur)=>{\r\n            acc[cur] = [];\r\n            return acc;\r\n        },{});\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Bind event\r\n\t * @param {String} event event name\r\n\t * @param {Function} handler event handler\r\n\t */\r\n    on(event, handler) {\r\n        if (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tthis._handlers[event].push(handler);\r\n\t\treturn {\r\n\t\t\tdestroy:()=>{\r\n\t\t\t\tthis.off(event, handler)\r\n\t\t\t}\r\n\t\t};\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Unbind event\r\n\t * @param {String} event event name\r\n\t * @param {Function} [handler] event handler, optional\r\n\t */\r\n    off(event, handler) {\r\n        if (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tif (!handler) {\r\n\t\t\tthis._handlers[event] = [];\r\n\t\t} else {\r\n\t\t\tvar handlers = this._handlers[event];\r\n\t\t\tvar index = handlers.indexOf(handler);\r\n\t\t\tif (index != -1){\r\n\t\t\t\thandlers.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Fire widget event\r\n\t * @param {String} event event name\r\n\t * @param {*} ...args event arguments\r\n\t */\r\n\tfire(event, ...args) {\r\n\t\tif (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tvar handlers = this._handlers[event];\r\n\t\tfor (var i = 0; i < handlers.length; i++) {\r\n\t\t\thandlers[i].apply(this, args);\r\n\t\t}\r\n\t\treturn this;\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys this observable, removes events and so on \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._handlers = null;\r\n\t\treturn this;\r\n    }\r\n\t\r\n}","import style from \"./Onboard.css\";\r\nimport * as d3 from \"d3\";\r\n\r\n/**\r\n * @class\r\n * Onboard class\r\n * @param {Object} options\r\n */\r\nexport default class MaskRenderer {\r\n\tconstructor(options, model) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._options = options;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * DOM container of this widget\r\n\t\t */\r\n\t\tthis._containerEl = null;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Mask Element\r\n\t\t */\r\n\t\tthis._svgEl = null;\t\t\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Step elements\r\n\t\t */\r\n\t\tthis._stepElements = [];\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * true if Onboard has been rendered\r\n\t\t */\r\n\t\tthis._rendered = false;\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._model = model;\r\n\r\n\t\tthis._onStartBinding = this._model.on(\"start\", this._onStart.bind(this));\r\n\t\tthis._onStepBinding = this._model.on(\"step\", this._onStep.bind(this));\r\n\t\tthis._onStopBinding = this._model.on(\"stop\", this._onStop.bind(this));\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Returns whether Onboard has been rendered or not\r\n\t * @returns {boolean} true if Onboard has been rendered\r\n\t */\r\n\tisRendered() {\r\n\t\treturn this._rendered;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Render logic of this widget\r\n\t * @param {String|DOMElement} selector selector or DOM element \r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\trender(selector) {\r\n\t\t// get container element using selector or given element\r\n\t\tthis._containerEl = d3.select(selector || document.body);\r\n\r\n\t\tthis._renderMask();\r\n\t\tthis._rendered = true;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t_getViewSize(){\r\n\t\treturn {\r\n\t\t\twidth: Math.max(document.documentElement.offsetWidth, document.documentElement.clientWidth),\r\n\t\t\theight: Math.max(document.documentElement.offsetHeight, document.documentElement.clientHeight)\r\n\t\t}\r\n\t}\r\n\r\n\t_renderMask(){\r\n\t\tvar size = this._getViewSize();\r\n\r\n\t\t// render SVG\r\n\t\tthis._svgEl = this._containerEl.append(\"svg\")\r\n\t\t\t.attr(\"class\", style[\"svg\"])\r\n\t\t\t.attr(\"width\", size.width)\r\n\t\t\t.attr(\"height\", size.height)\r\n\r\n\t\t// defs el\r\n\t\tthis._defsEl = this._svgEl.append(\"defs\");\r\n\r\n\t\tthis._maskEl = this._defsEl.append(\"mask\")\r\n\t\t\t.attr(\"class\", style[\"mask\"])\r\n\t\t\t.attr(\"id\", \"onboarding-mask\")\r\n\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t.attr(\"x\", 0)\r\n\t\t\t.attr(\"y\", 0)\r\n\r\n\t\tthis._maskBg = this._maskEl.append(\"rect\")\r\n\t\t\t.attr(\"class\", style[\"bg\"])\r\n\t\t\t.attr(\"x\", 0)\r\n\t\t\t.attr(\"y\", 0)\r\n\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t.attr(\"fill\", \"white\")\r\n\r\n\t\tthis._bgEl = this._svgEl.append(\"rect\")\r\n\t\t\t.attr(\"class\", style[\"bg\"])\r\n\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t.attr(\"x\", 0)\r\n\t\t\t.attr(\"y\", 0)\r\n\t\t\t.attr(\"mask\", \"url(#onboarding-mask)\")\r\n\t\t\t.attr(\"fill\", this._options.fillColor)\r\n\t\t\t.attr(\"fill-opacity\", this._options.fillOpacity)\r\n\r\n\t\tthis._onWindowResize = ()=>{\r\n\t\t\tvar size = this._getViewSize();\r\n\t\t\tthis._svgEl.attr(\"width\", size.width);\r\n\t\t\tthis._svgEl.attr(\"height\", size.height);\r\n\t\t}\t\r\n\r\n\t\twindow.addEventListener(\"resize\", this._onWindowResize);\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStart() {\r\n\t\tthis._svgEl.style(\"display\", \"block\");\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t_clearSteps(){\r\n\t\tthis._stepElements.forEach(element=>element.remove());\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_renderStep(step){\r\n\t\tif (!step.selector) return;\r\n\t\tvar selection = d3.selectAll(step.selector);\r\n\t\t\r\n\t\tselection.nodes().forEach(element=>{\r\n\t\t\tthis._stepElements.push(this._renderStepElement(element, step));\r\n\t\t});\r\n\t}\r\n\r\n\t_renderStepElement(element, step){\r\n\t\tvar shape = step.shape || {\r\n\t\t\ttype:\"rectangle\"\r\n\t\t};\r\n\r\n\t\tif (element.tagName == \"path\"){\r\n\t\t\treturn this._renderPathMask(element, step);\r\n\t\t} else if (shape.type == \"circle\"){\r\n\t\t\treturn this._renderCircleMask(element, step);\r\n\t\t} else {\r\n\t\t\treturn this._renderRectangleMask(element, step);\r\n\t\t}\r\n\t}\r\n\t_getBorderRadius(el){\r\n\t\treturn parseFloat(window.getComputedStyle(el, null).getPropertyValue(\"border-top-left-radius\"));\r\n\t}\r\n\r\n\t_getBox(element){\r\n\t\tvar box = element.getBoundingClientRect();\r\n\t\treturn {\r\n\t\t\ttop:box.top +  + document.body.scrollTop,\r\n\t\t\tleft:box.left +  + document.body.scrollLeft,\r\n\t\t\twidth: box.width,\r\n\t\t\theight:box.height\r\n\t\t}\r\n\t}\r\n\r\n\t_renderRectangleMask(element, step){\r\n\t\tvar box = this._getBox(element);\t\t\r\n\t\tvar borderRadius = this._getBorderRadius(element);\r\n\t\tvar shape = step.shape || {};\r\n\t\tvar offset = shape.offset || [0,0];\r\n\r\n\t\tif (step.shape && step.shape.radius){\r\n\t\t\tborderRadius = step.shape.radius;\r\n\t\t}\r\n\r\n\t\tvar stepEl = this._maskEl\r\n\t\t\t.append(\"rect\")\r\n\t\t\t\t.attr(\"fill\", \"black\")\r\n\t\t\t\t.attr(\"x\", box.left + offset[0])\r\n\t\t\t\t.attr(\"y\", box.top + offset[1])\r\n\t\t\t\t.attr(\"rx\", borderRadius)\r\n\t\t\t\t.attr(\"ry\", borderRadius)\r\n\t\t\t\t.attr(\"width\", shape.width || box.width)\r\n\t\t\t\t.attr(\"fill-opacity\", 1)\r\n\t\t\t\t.attr(\"stroke-opacity\", 1)\r\n\t\t\t\t.attr(\"stroke-width\", shape.strokeWidth || 0)\r\n\t\t\t\t.attr(\"stroke\", \"black\")\r\n\t\t\t\t.attr(\"height\", shape.height || box.height)\r\n\r\n\t\treturn stepEl;\r\n\t}\r\n\r\n\t_renderCircleMask(element, step){\r\n\t\tvar box = this._getBox(element);\r\n\t\tvar cx = box.left + box.width / 2;\r\n\t\tvar cy = box.top + box.height / 2;\r\n\t\tvar shape = step.shape || {};\r\n\t\tvar offset = shape.offset || [0,0];\r\n\r\n\t\tvar stepEl = this._maskEl\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"r\", step.shape.radius || box.width / 2)\r\n\t\t\t.attr(\"fill\", \"black\")\r\n\t\t\t.attr(\"fill-opacity\", 1)\r\n\t\t\t.attr(\"stroke-width\", shape.strokeWidth || 0)\r\n\t\t\t.attr(\"stroke-opacity\", 1)\r\n\t\t\t.attr(\"stroke\", \"black\")\r\n\t\t\t.attr(\"cx\", cx + offset[0])\r\n\t\t\t.attr(\"cy\", cy + offset[1])\r\n\r\n\t\treturn stepEl;\r\n\t}\r\n\r\n\t_renderPathMask(element, step){\r\n\t\tvar svgElement = element.parentElement; \r\n\t\twhile (svgElement && svgElement.tagName != \"svg\"){\r\n\t\t\tsvgElement = svgElement.parentElement;\r\n\t\t}\r\n\r\n\t\tvar box = this._getBox(svgElement);\r\n\r\n\t\tvar stepEl = this._maskEl\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", \"translate(\"+box.left+\", \"+box.top+\")\")\r\n\t\t\t.append(\"path\")\r\n\t\t\t\t.attr(\"fill\", \"black\")\r\n\t\t\t\t.attr(\"fill-opacity\", 1)\r\n\t\t\t\t.attr(\"stroke-width\", step.shape?step.shape.strokeWidth||0:0)\r\n\t\t\t\t.attr(\"stroke\", \"black\")\r\n\t\t\t\t.attr(\"d\", d3.select(element).attr(\"d\"))\r\n\t\t\t\r\n\t\t\r\n\t\treturn stepEl;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStep(step) {\r\n\t\tthis._clearSteps();\r\n\t\tthis._renderStep(step);\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStop() {\r\n\t\tthis._svgEl.style(\"display\", \"none\");\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tif (this._rendered){\r\n\t\t\twindow.removeEventListener(\"resize\", this._onWindowResize);\r\n\t\t}\r\n\r\n\t\tthis._clearSteps();\r\n\r\n\t\tthis._onStartBinding.destroy();\r\n\t\tthis._onStepBinding.destroy();\r\n\t\tthis._onStopBinding.destroy();\r\n\r\n\t\treturn this;\r\n\t}\r\n}","/**\r\n * @class\r\n */\r\nexport default class PositionResolver {\r\n\t/**\r\n\t * @public\r\n\t * @returns {Object}\r\n\t */\r\n\tgetWindowPosition(targetBox, windowBox, arrowBox) {\r\n\t\tvar position = this._getTargetPosition(targetBox, arrowBox);\r\n\t\tvar left = this._getLeftWindowPosition(position, targetBox, arrowBox, windowBox);\r\n\t\tvar top = this._getTopWindowPosition(position, targetBox, arrowBox, windowBox);\r\n\r\n\t\treturn {\r\n\t\t\tposition:position,\r\n\t\t\tleft:left, \r\n\t\t\ttop:top\r\n\t\t}\r\n\t} \t\r\n\r\n\t_getLeftWindowPosition(position, targetBox, arrowBox, windowBox){\r\n\t\treturn {\r\n\t\t\t\"left-top\":targetBox.left + targetBox.width/2 + arrowBox.width,\r\n\t\t\t\"right-top\":targetBox.left - arrowBox.width - windowBox.width,\r\n\t\t\t\"left-bottom\":targetBox.left + targetBox.width/2 + arrowBox.width,\r\n\t\t\t\"right-bottom\":targetBox.left - windowBox.width - arrowBox.width,\r\n\t\t}[position];\r\n\t}\r\n\r\n\t_getTopWindowPosition(position, targetBox, arrowBox, windowBox){\r\n\t\treturn {\r\n\t\t\t\"left-top\":targetBox.top + targetBox.height + arrowBox.height,\r\n\t\t\t\"right-top\":targetBox.top + targetBox.height/2 + arrowBox.height,\r\n\t\t\t\"left-bottom\":targetBox.top - windowBox.height - arrowBox.height,\r\n\t\t\t\"right-bottom\":targetBox.top - windowBox.height + arrowBox.height,\r\n\t\t}[position];\r\n\t}\t\r\n\r\n\tgetArrowPosition(targetBox, arrowBox) {\r\n\t\tvar position = this._getTargetPosition(targetBox, arrowBox);\r\n\t\tvar left = this._getLeftArrowPosition(position, targetBox, arrowBox);\r\n\t\tvar top = this._getTopArrowPosition(position, targetBox, arrowBox);\r\n\r\n\t\treturn {\r\n\t\t\tposition:position,\r\n\t\t\tleft:left, \r\n\t\t\ttop:top\r\n\t\t}\r\n\t}\r\n\r\n\t_getLeftArrowPosition(position, targetBox, arrowBox){\r\n\t\treturn {\r\n\t\t\t\"left-top\":targetBox.left + targetBox.width/2,\r\n\t\t\t\"right-top\":targetBox.left - arrowBox.width,\r\n\t\t\t\"left-bottom\":targetBox.left + targetBox.width/2 ,\r\n\t\t\t\"right-bottom\":targetBox.left - arrowBox.width,\r\n\t\t}[position];\r\n\t}\r\n\r\n\t_getTopArrowPosition(position, targetBox, arrowBox){\r\n\t\treturn {\r\n\t\t\t\"left-top\":targetBox.top + targetBox.height,\r\n\t\t\t\"right-top\":targetBox.top + targetBox.height/2,\r\n\t\t\t\"left-bottom\":targetBox.top - arrowBox.height,\r\n\t\t\t\"right-bottom\":targetBox.top + arrowBox.height,\r\n\t\t}[position];\r\n\t}\r\n\r\n\t_getTargetPosition(targetBox){\r\n\t\tvar point = [targetBox.left, targetBox.top];\r\n\t\tvar crossPoint = [document.documentElement.clientWidth * 0.5,document.documentElement.clientHeight*0.5];\r\n\t\tvar position = [\"left\", \"top\"];\r\n\r\n\t\t[\"right\", \"bottom\"].forEach((s, i)=>{\r\n\t\t\tif (point[i]>crossPoint[i]){\r\n\t\t\t\tposition[i] = s;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn position.join(\"-\");\r\n\t}\r\n}","\t/**\r\n\t * @private\r\n     * @param {Element}\r\n\t * @returns {Object} box\r\n     * @returns {Object} box.width\r\n     * @returns {Object} box.height\r\n     * @returns {Object} box.top\r\n     * @returns {Object} box.left\r\n     * @returns {Object} box.right\r\n     * @returns {Object} box.bottom\r\n\t */\r\n\texport const getBox = (element) => {\r\n\t\tvar box = element.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\ttop:box.top + document.body.scrollTop,\r\n\t\t\tleft:box.left + document.body.scrollLeft,\r\n\t\t\tright:box.left + document.body.scrollTop + box.width,\r\n\t\t\tbottom:box.top + document.body.scrollTop + box.height,\r\n\t\t\twidth: box.width,\r\n\t\t\theight:box.height\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {Array<Element>}\r\n\t * @returns {Object} box\r\n     * @returns {Object} box.width\r\n     * @returns {Object} box.height\r\n     * @returns {Object} box.top\r\n     * @returns {Object} box.left\r\n     * @returns {Object} box.right\r\n     * @returns {Object} box.bottom\r\n\t */\r\n\texport const getMultiBox = (nodes) => {\r\n\t\tvar boxes = nodes.map(node=>getBox(node));\r\n\r\n\t\tvar box = {\r\n\t\t\ttop:Math.min.apply(Math, boxes.map(box=>box.top)),\r\n\t\t\tleft:Math.min.apply(Math, boxes.map(box=>box.left)),\r\n\t\t\tright:Math.max.apply(Math, boxes.map(box=>box.right)),\r\n\t\t\tbottom:Math.max.apply(Math, boxes.map(box=>box.bottom))\r\n\t\t}\r\n\r\n\t\tbox.width = box.right - box.left;\r\n\t\tbox.height = box.bottom - box.top;\r\n\r\n\t\treturn box; \r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n     * @param {D3Selection}\r\n\t * @returns {Object} box\r\n     * @returns {Object} box.width\r\n     * @returns {Object} box.height\r\n     * @returns {Object} box.top\r\n     * @returns {Object} box.left\r\n     * @returns {Object} box.right\r\n     * @returns {Object} box.bottom\r\n\t */\r\n\texport const getTargetBox = (selection) => {\r\n\t\tvar nodes = selection.nodes();\r\n\r\n\t\tif (nodes[0] && nodes[0].tagName == \"path\"){\r\n\t\t\treturn getMultiBox(nodes);\r\n\t\t} else {\r\n\t\t\treturn getBox(nodes[0]);\r\n\t\t}\r\n\t}","import style from \"./Onboard.css\";\r\nimport * as d3 from \"d3\";\r\nimport PositionResolver from \"./PositionResolver\";\r\nimport * as BoxUtils from \"./utils/BoxUtils\";\r\n\r\n/**\r\n * @class\r\n * @param {Object} options\r\n */\r\nexport default class ArrowRenderer {\r\n\tconstructor(options, model) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._options = options;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * DOM container of this widget\r\n\t\t */\r\n\t\tthis._containerEl = null;\t\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * true if Onboard has been rendered\r\n\t\t */\r\n\t\tthis._rendered = false;\r\n\r\n\t\tthis._model = model;\r\n\t\tthis._onStartBinding = this._model.on(\"start\", this._onStart.bind(this));\r\n\t\tthis._onStepBinding = this._model.on(\"step\", this._onStep.bind(this));\r\n\t\tthis._onStopBinding = this._model.on(\"stop\", this._onStop.bind(this));\r\n\t\tthis._positionResolver = new PositionResolver();\r\n\t}\r\n\r\n\tgetArrowBox(){\r\n\t\treturn this._arrowBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Returns whether Onboard has been rendered or not\r\n\t * @returns {boolean} true if Onboard has been rendered\r\n\t */\r\n\tisRendered() {\r\n\t\treturn this._rendered;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Render logic of this widget\r\n\t * @param {String|DOMElement} selector selector or DOM element \r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\trender(selector) {\r\n\t\t// get container element using selector or given element\r\n\t\tthis._containerEl = d3.select(selector || document.body);\r\n\r\n\t\tthis._renderArrow();\r\n\t\tthis._rendered = true;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_renderArrow(){\r\n\t\tthis._arrowEl = this._containerEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"arrow\"]+\" \"+style[\"arrow-bottom-right\"])\r\n\r\n\t\tthis._arrowBox = BoxUtils.getBox(this._arrowEl.node());\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStart() {\r\n\t\tthis._arrowEl.style(\"visibility\", \"visible\");\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @private\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStep(step) {\r\n\t\tif (!step.selector){\r\n\t\t\tthis._arrowEl.style(\"visibility\", \"hidden\");\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tthis._arrowEl.style(\"visibility\", \"visible\");\r\n\t\t}\r\n\r\n\t\tvar selection = d3.selectAll(step.selector);\r\n\t\tvar targetBox = BoxUtils.getTargetBox(selection);\r\n\t\tvar arrowPosition = this._positionResolver.getArrowPosition(targetBox, this._arrowBox);\r\n\r\n\t\tthis._arrowEl.transition().duration(0 /*this._options.animationDuration*/)\r\n\t\t\t.style(\"top\", arrowPosition.top+\"px\")\r\n\t\t\t.style(\"left\", arrowPosition.left+\"px\");\r\n\r\n\t\t\t// epxerimental fading when moving arrow\r\n\t\t// this._arrowEl\r\n\t\t// \t.transition(\"2\")\r\n\t\t// \t.duration(this._options.animationDuration/4)\r\n\t\t// \t.style(\"opacity\", 0)\r\n\t\t// \t.transition().duration(this._options.animationDuration/2)\r\n\t\t// \t.style(\"opacity\", 0)\r\n\t\t// \t.transition().duration(this._options.animationDuration/4)\r\n\t\t// \t.style(\"opacity\", 1);\r\n\r\n\t\tthis._arrowEl.attr(\"class\", style[\"arrow\"]+\" \"+style[\"arrow-\"+arrowPosition.position]);\r\n\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @private\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStop() {\r\n\t\tthis._arrowEl.style(\"display\", \"none\");\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._onStartBinding.destroy();\r\n\t\tthis._onStepBinding.destroy();\r\n\t\tthis._onStopBinding.destroy();\r\n\r\n\t\tif (this._arrowEl){\r\n\t\t\tthis._arrowEl.remove();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n}","import style from \"./Onboard.css\";\r\nimport * as d3 from \"d3\";\r\n\r\n/**\r\n * @class\r\n * Onboard class\r\n * @param {Object} options\r\n */\r\nexport default class OnboardRenderer {\r\n\tconstructor(options, model) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._options = options;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * DOM container of this widget\r\n\t\t */\r\n\t\tthis._containerEl = null;\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * true if Onboard has been rendered\r\n\t\t */\r\n\t\tthis._rendered = false;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Model\r\n\t\t */\r\n\t\tthis._model = model;\r\n\r\n\t\tthis._steps = model.getSteps().filter(step=>step.showProgress !== false);\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Number of steps \r\n\t\t */\r\n\t\tthis._numOfSteps = this._steps.length;\t\t\r\n\r\n\t\t// only show when number of steps is > than 1\r\n\t\tif (this._numOfSteps>1){\r\n\t\t\tthis._onStepBinding = this._model.on(\"step\", this._onStep.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Returns whether Onboard has been rendered or not\r\n\t * @returns {boolean} true if Onboard has been rendered\r\n\t */\r\n\tisRendered() {\r\n\t\treturn this._rendered;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Render logic of this widget\r\n\t * @param {String|DOMElement} selector selector or DOM element \r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\trender(selector) {\r\n\t\t// get container element using selector or given element\r\n\t\tthis._containerEl = d3.select(selector);\r\n\r\n\t\tthis._renderProgress();\r\n\t\tthis._renderSteps();\r\n\r\n\t\tthis._rendered = true;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t_renderProgress(){\r\n\t\tthis._progressEl = this._containerEl.append(\"div\").classed(style[\"window-progress-ct\"], true);\r\n\t}\r\n\r\n\t_renderSteps(){\r\n\t\tthis._steps.slice(1).forEach(()=>{\r\n\t\t\tthis._progressEl.append(\"div\")\r\n\t\t\t\t.classed(style[\"window-progress-step\"], true);\r\n\t\t})\r\n\t}\t\r\n\r\n\t_resizeSteps(step){\r\n\t\tvar stepWidth = this._getStepWidth(step);\r\n\t\td3.selectAll(\".\"+style[\"window-progress-step\"])\r\n\t\t\t.transition()\r\n\t\t\t.duration(this._options.animationDuration)\r\n\t\t\t.style(\"width\", stepWidth + \"px\");\r\n\t}\r\n\r\n\t_getStepWidth(step){\r\n\t\treturn (step.windowWidth || this._options.windowWidth) / this._numOfSteps;\r\n\t}\r\n\r\n\t_getProgressWidth(index, step){\r\n\t\treturn (step.windowWidth || this._options.windowWidth) * (index + 1) / this._numOfSteps;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStep(step) {\r\n\t\tif (step.showProgress === false) {\r\n\t\t\tthis._progressEl\r\n\t\t\t\t.transition()\r\n\t\t\t\t.duration(this._options.animationDuration)\r\n\t\t\t\t.style(\"width\", 0+\"px\");\r\n\t\t\r\n\t\t\treturn;\r\n\t\t} \r\n\r\n\t\tvar index = this._steps.indexOf(step);\r\n\t\tvar width = this._getProgressWidth(index, step);\r\n\t\tthis._progressEl\r\n\t\t\t.transition()\r\n\t\t\t.duration(this._options.animationDuration)\r\n\t\t\t.style(\"width\", width+\"px\");\r\n\r\n\t\tthis._resizeSteps(step);\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tif (this._rendered){\r\n\t\t\tthis._progressEl.remove();\r\n\t\t}\r\n\r\n\t\tif (this._onStepBinding){\r\n\t\t\tthis._onStepBinding.destroy();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n}","import style from \"./Onboard.css\";\r\nimport * as d3 from \"d3\";\r\nimport PositionResolver from \"./PositionResolver\";\r\nimport ArrowRenderer from \"./ArrowRenderer\";\r\nimport ProgressRenderer from \"./ProgressRenderer\";\r\nimport * as Defaults from \"./OnboardDefaults\";\r\nimport * as BoxUtils from \"./utils/BoxUtils\";\r\n\r\n/**\r\n * @class\r\n * @param {Object} options\r\n */\r\nexport default class WindowRenderer {\r\n\tconstructor(options, model) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._options = options;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * DOM container of this widget\r\n\t\t */\r\n\t\tthis._containerEl = null;\t\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * true if Onboard has been rendered\r\n\t\t */\r\n\t\tthis._rendered = false;\r\n\r\n\t\tthis._model = model;\r\n\r\n\t\tthis._onStartBinding = this._model.on(\"start\", this._onStart.bind(this));\r\n\t\tthis._onStepBinding = this._model.on(\"step\", this._onStep.bind(this));\r\n\t\tthis._onStopBinding = this._model.on(\"stop\", this._onStop.bind(this));\r\n\r\n\t\tthis._positionResolver = new PositionResolver();\r\n\t\tthis._arrowRenderer = new ArrowRenderer(options, model);\t\t\r\n\t\tthis._progressRenderer = new ProgressRenderer(options, model);\t\t\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Returns whether Onboard has been rendered or not\r\n\t * @returns {boolean} true if Onboard has been rendered\r\n\t */\r\n\tisRendered() {\r\n\t\treturn this._rendered;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Render logic of this widget\r\n\t * @param {String|DOMElement} selector selector or DOM element \r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\trender(selector) {\r\n\t\t// get container element using selector or given element\r\n\t\tthis._containerEl = d3.select(selector || document.body);\r\n\r\n\t\tthis._renderWindow();\r\n\t\tthis._arrowRenderer.render(selector);\r\n\t\tthis._progressRenderer.render(this._windowEl.node());\r\n\t\tthis._rendered = true;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t_renderWindow(){\r\n\t\tthis._windowEl = this._containerEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"window\"] + \" \" + this._options.windowClassName)\r\n\t\t\t.style(\"width\", this._options.windowWidth + \"px\");\r\n\r\n\t\tthis._nextBtnEl = this._windowEl.append(\"div\")\r\n\t\t\t.on(\"click\", this._onNextClick.bind(this))\r\n\t\t\t.attr(\"class\", style[\"window-next-btn\"] + \" \" + Defaults.NEXT_BUTTON_CLASS_NAME);\r\n\r\n\t\tthis._nextBtnTextEl = this._nextBtnEl.append(\"span\")\r\n\t\t\t.attr(\"class\",style[\"window-next-btn-text\"])\r\n\t\t\t.html(this._options.nextText);\r\n\r\n\t\tthis._nextBtnEl.on(\"mouseover\", ()=>{\r\n\t\t\tthis._nextBtnEl.classed(style[\"window-next-btn-hover\"], true);\r\n\t\t});\r\n\r\n\t\tthis._nextBtnEl.on(\"mouseout\", ()=>{\r\n\t\t\tthis._nextBtnEl.classed(style[\"window-next-btn-hover\"], false);\r\n\t\t})\r\n\r\n\t\tthis._nextBtnIconEl = this._nextBtnEl.append(\"div\").attr(\"class\",style[\"window-btn-icon\"]+\" zmdi zmdi-long-arrow-right\");\r\n\r\n\t\tthis._prevBtnEl = this._windowEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"window-prev-btn\"] + \" \" + Defaults.PREV_BUTTON_CLASS_NAME)\r\n\t\t\t.on(\"click\", this._onPrevClick.bind(this))\r\n\t\t\t.html(this._options.prevText)\r\n\r\n\t\tthis._prevBtnEl.append(\"div\").attr(\"class\",style[\"window-btn-icon\"]+\" zmdi zmdi-long-arrow-left\");\t\t\t\r\n\r\n\t\tthis._titleEl = this._windowEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"window-title\"] + \" \" +Defaults.WINDOW_TITLE_CLASS_NAME)\r\n\r\n\t\tthis._bodyEl = this._windowEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"window-body\"] + \" \" + Defaults.WINDOW_BODY_CLASS_NAME)\r\n\r\n\t\tthis._closeEl = this._windowEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"window-close\"] + \" zmdi zmdi-close\")\r\n\t\t\t.on(\"click\", this._onCloseClick.bind(this))\r\n\t}\r\n\r\n\t_onCloseClick(){\r\n\t\tthis._model.stop();\r\n\t}\r\n\r\n\t_onNextClick(){\r\n\t\tthis._nextBtnEl.classed(style[\"window-next-btn-hover\"], false);\r\n\r\n\t\tif (this._model.hasNext()){\r\n\t\t\tthis._model.next();\r\n\t\t} else {\r\n\t\t\tthis._model.stop();\r\n\t\t}\r\n\t}\r\n\r\n\t_onPrevClick(){\r\n\t\tthis._model.prev();\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStart() {\r\n\t\tthis._windowEl.style(\"display\", \"block\");\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStep(step) {\r\n\t\tthis._titleEl.html(step.title);\r\n\t\tthis._bodyEl.html(step.text);\r\n\r\n\t\tthis._prevBtnEl.classed(style[\"window-button-has-prev\"], this._model.hasPrev());\r\n\t\tthis._nextBtnEl.classed(style[\"window-button-has-next\"], this._model.hasNext());\r\n\t\tthis._nextBtnTextEl.html(step.nextText || this._options.nextText)\r\n\t\tthis._windowEl.attr(\"class\", style[\"window\"] + \" \" + (step.windowClassName || this._options.windowClassName))\r\n\t\tthis._windowEl.style(\"width\", (step.windowWidth || this._options.windowWidth) + \"px\");\r\n\r\n\t\tif (!step.selector) {\r\n\t\t\tthis._windowEl.transition().duration(this._options.animationDuration)\r\n\t\t\t\t.style(\"left\", null)\r\n\t\t\t\t.style(\"top\", null);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar selection = d3.selectAll(step.selector);\r\n\r\n\t\tvar targetBox = BoxUtils.getTargetBox(selection);\r\n\t\tvar windowBox = BoxUtils.getBox(this._windowEl.node());\r\n\t\tvar windowPosition = this._positionResolver.getWindowPosition(targetBox, windowBox, this._arrowRenderer.getArrowBox());\r\n\r\n\t\tthis._windowEl.transition().duration(this._options.animationDuration)\r\n\t\t\t.style(\"left\", windowPosition.left+\"px\")\r\n\t\t\t.style(\"top\", windowPosition.top+\"px\");\r\n\r\n\t\tthis._windowEl.classed(style[\"window-\"+windowPosition.position], true);\r\n\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStop() {\r\n\t\tthis._windowEl.style(\"display\", \"none\");\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._onStartBinding.destroy();\r\n\t\tthis._onStepBinding.destroy();\r\n\t\tthis._onStopBinding.destroy();\r\n\r\n\t\tthis._progressRenderer.destroy();\r\n\t\tthis._arrowRenderer.destroy();\r\n\r\n\t\treturn this;\r\n\t}\r\n}","import Observable from \"./utils/Observable\";\r\nimport MaskRenderer from \"./MaskRenderer\";\r\nimport WindowRenderer from \"./WindowRenderer\";\r\nimport * as d3 from \"d3\";\r\n\r\n/**\r\n * @class\r\n * Onboard class\r\n * @param {Object} options\r\n */\r\nexport default class OnboardRenderer {\r\n\tconstructor(options, model) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._options = options;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * DOM container of this widget\r\n\t\t */\r\n\t\tthis._containerEl = null;\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * true if Onboard has been rendered\r\n\t\t */\r\n\t\tthis._rendered = false;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Model\r\n\t\t */\r\n\t\tthis._model = model;\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * observable handler\r\n\t\t */\r\n\t\tthis._observable = new Observable([\r\n\t\t\t\r\n\t\t]);\t\t\r\n\r\n\t\tthis._maskRenderer = new MaskRenderer(options, model);\r\n\t\tthis._windowRenderer = new WindowRenderer(options, model);\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Returns whether Onboard has been rendered or not\r\n\t * @returns {boolean} true if Onboard has been rendered\r\n\t */\r\n\tisRendered() {\r\n\t\treturn this._rendered;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Render logic of this widget\r\n\t * @param {String|DOMElement} selector selector or DOM element \r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\trender(selector) {\r\n\t\t// get container element using selector or given element\r\n\t\tthis._containerEl = d3.select(selector || document.body);\r\n\r\n\t\tthis._maskRenderer.render(selector);\r\n\t\tthis._windowRenderer.render(selector);\r\n\r\n\t\tthis._rendered = true;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Bind widget event\r\n\t * @param {String} event event name\r\n\t * @param {Function} handler event handler\r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\ton(eventName, handler) {\r\n\t\tthis._observable.on(eventName, handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind widget event\r\n\t * @param {String} event event name\r\n\t * @param {Function} [handler] event handler\r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\toff(eventName, handler) {\r\n\t\tthis._observable.off(eventName, handler);\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._observable.destroy();\t\r\n\r\n\t\tthis._maskRenderer.destroy();\r\n\t\tthis._windowRenderer.destroy();\r\n\r\n\t\treturn this;\r\n\t}\r\n}","import Observable from \"./utils/Observable\";\r\n\r\n/**\r\n * @class\r\n * @param {Object} options\r\n */\r\nexport default class OnboardModel {\r\n\tconstructor(options) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._steps = options.steps || [];\r\n\r\n\t\tthis._currentStep = null;\r\n\t\tthis._currentStepIndex = -1;\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * observable handler\r\n\t\t */\r\n\t\tthis._observable = new Observable([\r\n\t\t\t/**\r\n\t\t\t * @event start\r\n\t\t\t * @param {Object} step\r\n\t\t\t * @param {int} index\r\n\t\t\t */\r\n\t\t\t\"start\",\r\n\t\t\t/**\r\n\t\t\t * @event stop\r\n\t\t\t * @param {Object} step\r\n\t\t\t * @param {int} index\r\n\t\t\t */\r\n\t\t\t\"stop\",\r\n\t\t\t/**\r\n\t\t\t * @event step\r\n\t\t\t * @param {Object} step\r\n\t\t\t * @param {int} index\r\n\t\t\t */\r\n\t\t\t\"step\"\r\n\t\t]);\t\t\r\n\t}\r\n\r\n\tgetSteps(){\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tstart(){\r\n\t\tthis._currentStepIndex = 0;\r\n\t\tthis._currentStep = this._steps[this._currentStepIndex];\r\n\t\tthis._observable.fire(\"start\", this._currentStep, this._currentStepIndex);\r\n\t\tthis._observable.fire(\"step\", this._currentStep, this._currentStepIndex);\r\n\t}\r\n\r\n\tstop(){\r\n\t\tthis._observable.fire(\"stop\", this._currentStep, this._currentStepIndex);\r\n\t\tthis._currentStep = null;\r\n\t\tthis._currentStepIndex = -1;\r\n\t}\t\r\n\r\n\tnext(){\r\n\t\tif (this.hasNext()){\r\n\t\t\tthis._currentStep = this._steps[++this._currentStepIndex];\r\n\t\t\tthis._observable.fire(\"step\", this._currentStep, this._currentStepIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tprev(){\r\n\t\tif (this.hasPrev()){\r\n\t\t\tthis._currentStep = this._steps[--this._currentStepIndex];\r\n\t\t\tthis._observable.fire(\"step\", this._currentStep, this._currentStepIndex);\r\n\t\t}\r\n\t}\r\n\r\n\thasNext(){\r\n\t\treturn this._steps.length > this._currentStepIndex +1;\r\n\t}\r\n\r\n\thasPrev(){\r\n\t\treturn this._currentStepIndex > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Bind widget event\r\n\t * @param {String} event event name\r\n\t * @param {Function} handler event handler\r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\ton(eventName, handler) {\r\n\t\tthis._observable.on(eventName, handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind widget event\r\n\t * @param {String} event event name\r\n\t * @param {Function} [handler] event handler\r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\toff(eventName, handler) {\r\n\t\tthis._observable.off(eventName, handler);\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._observable.destroy();\r\n\t\tthis._currentStep = null;\r\n\r\n\t\treturn this;\r\n\t}\r\n}","import * as d3 from \"d3\";\r\n\r\n/**\r\n * @class\r\n * @param {Object} options\r\n */\r\nexport default class OnboardKeyHandler {\r\n\tconstructor(options, model) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._options = options;\r\n\t\tthis._model = model;\r\n\r\n\t\tthis._onStartBinding = this._model.on(\"start\", this._onStart.bind(this));\r\n\t\tthis._onStopBinding = this._model.on(\"stop\", this._onStop.bind(this));\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {OnboarKeyHandler} \r\n\t */\r\n\t_onStart() {\r\n\t\td3.select(document).on(\"keydown.onboard\", this._onKeyDown.bind(this));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {OnboarKeyHandler} \r\n\t */\r\n\t_onKeyDown(){\r\n\t\tif(d3.event.key == \"ArrowLeft\" || d3.event.key == \"Backspace\"){\r\n\t\t\tthis._model.hasPrev()?this._model.prev():this._model.stop();\r\n\t\t} else if (d3.event.key == \"ArrowRight\" || d3.event.key == \"Enter\"){\r\n\t\t\tthis._model.hasNext()?this._model.next():this._model.stop();\r\n\t\t} else if (d3.event.key == \"Escape\"){\r\n\t\t\tthis._model.stop();\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\td3.event.preventDefault();\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {OnboarKeyHandler} \r\n\t */\r\n\t_onStop() {\r\n\t\td3.select(document).on(\"keydown.onboard\", null);\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._onStop();\r\n\r\n\t\tthis._onStartBinding.destroy();\r\n\t\tthis._onStopBinding.destroy();\r\n\r\n\t\treturn this;\r\n\t}\r\n}","/**\r\n * @public\r\n * Default fill color\r\n */\r\nexport const FILL_COLOR = \"#343A3D\";\r\n\r\n/**\r\n * @public\r\n * Default fill opacity\r\n */\r\nexport const FILL_OPACITY = 0.5;\r\n\r\n/**\r\n * @public\r\n * Default animation duration\r\n */\r\nexport const ANIMATION_DURATION = 200;\r\n\r\n/**\r\n * @public\r\n * Next text\r\n */\r\nexport const NEXT_TEXT = \"Next\";\r\n\r\n/**\r\n * @public\r\n * Window class name\r\n */\r\nexport const WINDOW_CLASS_NAME = \"\";\r\n\r\n/**\r\n * @public\r\n * Prev button class name\r\n */\r\nexport const PREV_BUTTON_CLASS_NAME = \"onboard-window-prev-btn\";\r\n\r\n/**\r\n * @public\r\n * Next button class name\r\n */\r\nexport const NEXT_BUTTON_CLASS_NAME = \"onboard-window-next-btn\";\r\n\r\n/**\r\n * @public\r\n * Next button class name\r\n */\r\nexport const WINDOW_TITLE_CLASS_NAME = \"onboard-window-title\";\r\n\r\n/**\r\n * @public\r\n * Next button class name\r\n */\r\nexport const WINDOW_BODY_CLASS_NAME = \"onboard-window-body\";\r\n\r\n\r\n\r\n/**\r\n * @public\r\n * Default window width\r\n */\r\nexport const WINDOW_WIDTH = 400;"],"names":["getOptionValue","optionValue","defaultOptionValue","Observable","events","_handlers","reduce","acc","cur","event","handler","this","push","off","handlers","index","indexOf","splice","args","i","length","apply","MaskRenderer","options","model","_options","_containerEl","_svgEl","_stepElements","_rendered","_model","_onStartBinding","on","_onStart","bind","_onStepBinding","_onStep","_onStopBinding","_onStop","selector","d3","document","body","_renderMask","Math","max","documentElement","offsetWidth","clientWidth","offsetHeight","clientHeight","size","_getViewSize","append","attr","style","width","height","_defsEl","_maskEl","_maskBg","_bgEl","fillColor","fillOpacity","_onWindowResize","_this","addEventListener","forEach","element","remove","step","nodes","_this2","_renderStepElement","shape","tagName","_renderPathMask","type","_renderCircleMask","_renderRectangleMask","el","parseFloat","window","getComputedStyle","getPropertyValue","box","getBoundingClientRect","top","scrollTop","left","scrollLeft","_getBox","borderRadius","_getBorderRadius","offset","radius","strokeWidth","cx","cy","svgElement","parentElement","_clearSteps","_renderStep","removeEventListener","destroy","PositionResolver","targetBox","windowBox","arrowBox","position","_getTargetPosition","_getLeftWindowPosition","_getTopWindowPosition","_getLeftArrowPosition","_getTopArrowPosition","point","crossPoint","s","join","getBox","getMultiBox","boxes","map","node","min","right","bottom","getTargetBox","selection","ArrowRenderer","_positionResolver","_arrowBox","_renderArrow","_arrowEl","BoxUtils","arrowPosition","getArrowPosition","transition","duration","OnboardRenderer","_steps","getSteps","filter","showProgress","_numOfSteps","_renderProgress","_renderSteps","_progressEl","classed","slice","stepWidth","_getStepWidth","animationDuration","windowWidth","_getProgressWidth","_resizeSteps","WindowRenderer","_arrowRenderer","_progressRenderer","ProgressRenderer","_renderWindow","render","_windowEl","windowClassName","_nextBtnEl","_onNextClick","_nextBtnTextEl","html","nextText","_nextBtnIconEl","_prevBtnEl","_onPrevClick","prevText","_titleEl","_bodyEl","_closeEl","_onCloseClick","stop","hasNext","next","prev","title","text","hasPrev","windowPosition","getWindowPosition","getArrowBox","_observable","_maskRenderer","_windowRenderer","eventName","OnboardModel","steps","_currentStep","_currentStepIndex","fire","OnboardKeyHandler","_onKeyDown","key","preventDefault","_onboardRenderer","_onboardKeyHandler","start"],"mappings":"2MAYA,SAASA,GAAeC,EAAaC,cACP,KAAfD,EAA6BC,EAAqBD,0VCR5CE,6BAILC,4EAEHC,UAAYD,EAAOE,OAAO,SAACC,EAAKC,YAC7BA,MACGD,4CAUZE,EAAOC,mBACAD,IAASE,MAAKN,WAAY,KAAM,kBAAoBI,cAC3DJ,UAAUI,GAAOG,KAAKF,YAElB,aACFG,IAAIJ,EAAOC,iCAWZD,EAAOC,QACDD,IAASE,MAAKN,WAAY,KAAM,kBAAoBI,KAC3DC,EAEE,IACFI,GAAWH,KAAKN,UAAUI,GAC1BM,EAAQD,EAASE,QAAQN,IACf,GAAVK,KACME,OAAOF,EAAO,aALnBV,UAAUI,YAQTE,mCASHF,QACEA,IAASE,MAAKN,WAAY,KAAM,kBAAoBI,SACtDK,GAAWH,KAAKN,UAAUI,sBAFhBS,uDAGT,GAAIC,GAAI,EAAGA,EAAIL,EAASM,OAAQD,MAC3BA,GAAGE,MAAMV,KAAMO,SAElBP,oDAQFN,UAAY,KACVM,25LClEYW,wBACRC,EAASC,kBAKfC,SAAWF,OAMXG,aAAe,UAMfC,OAAS,UAMTC,sBAMAC,WAAY,OAKZC,OAASN,OAETO,gBAAkBpB,KAAKmB,OAAOE,GAAG,QAASrB,KAAKsB,SAASC,KAAKvB,YAC7DwB,eAAiBxB,KAAKmB,OAAOE,GAAG,OAAQrB,KAAKyB,QAAQF,KAAKvB,YAC1D0B,eAAiB1B,KAAKmB,OAAOE,GAAG,OAAQrB,KAAK2B,QAAQJ,KAAKvB,4DASxDA,MAAKkB,yCASNU,eAEDb,aAAec,SAAUD,GAAYE,SAASC,WAE9CC,mBACAd,WAAY,EAEVlB,yDAKCiC,KAAKC,IAAIJ,SAASK,gBAAgBC,YAAaN,SAASK,gBAAgBE,oBACvEJ,KAAKC,IAAIJ,SAASK,gBAAgBG,aAAcR,SAASK,gBAAgBI,gEAK9EC,EAAOxC,KAAKyC,oBAGXzB,OAAShB,KAAKe,aAAa2B,OAAO,OACrCC,KAAK,QAASC,EAAA,KACdD,KAAK,QAASH,EAAKK,OACnBF,KAAK,SAAUH,EAAKM,QAGtB9C,KAAK+C,QAAU/C,KAAKgB,OAAO0B,OAAO,aAE7BM,QAAUhD,KAAK+C,QAAQL,OAAO,QACjCC,KAAK,QAASC,EAAA,MACdD,KAAK,KAAM,mBACXA,KAAK,QAAS,QACdA,KAAK,SAAU,QACfA,KAAK,IAAK,GACVA,KAAK,IAAK,QAEPM,QAAUjD,KAAKgD,QAAQN,OAAO,QACjCC,KAAK,QAASC,EAAA,IACdD,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,QAAS,QACdA,KAAK,SAAU,QACfA,KAAK,OAAQ,cAEVO,MAAQlD,KAAKgB,OAAO0B,OAAO,QAC9BC,KAAK,QAASC,EAAA,IACdD,KAAK,QAAS,QACdA,KAAK,SAAU,QACfA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,OAAQ,yBACbA,KAAK,OAAQ3C,KAAKc,SAASqC,WAC3BR,KAAK,eAAgB3C,KAAKc,SAASsC,kBAEhCC,gBAAkB,cAClBb,GAAOc,EAAKb,iBACXzB,OAAO2B,KAAK,QAASH,EAAKK,SAC1B7B,OAAO2B,KAAK,SAAUH,EAAKM,gBAG1BS,iBAAiB,SAAUvD,KAAKqD,gEAQlCrC,OAAO4B,MAAM,UAAW,SACtB5C,gDAIFiB,cAAcuC,QAAQ,kBAASC,GAAQC,+CAMjCC,iBACNA,EAAK/B,UACMC,YAAa8B,EAAK/B,UAExBgC,QAAQJ,QAAQ,cACpBvC,cAAchB,KAAK4D,EAAKC,mBAAmBL,EAASE,kDAIxCF,EAASE,MACvBI,GAAQJ,EAAKI,aACX,mBAGiB,QAAnBN,EAAQO,QACJhE,KAAKiE,gBAAgBR,EAASE,GACb,UAAdI,EAAMG,KACTlE,KAAKmE,kBAAkBV,EAASE,GAEhC3D,KAAKoE,qBAAqBX,EAASE,4CAG3BU,SACTC,YAAWC,OAAOC,iBAAiBH,EAAI,MAAMI,iBAAiB,2DAG9DhB,MACHiB,GAAMjB,EAAQkB,mCAEbD,EAAIE,MAAS9C,SAASC,KAAK8C,eAC1BH,EAAII,OAAUhD,SAASC,KAAKgD,iBAC1BL,EAAI7B,aACJ6B,EAAI5B,qDAIQW,EAASE,MACzBe,GAAM1E,KAAKgF,QAAQvB,GACnBwB,EAAejF,KAAKkF,iBAAiBzB,GACrCM,EAAQJ,EAAKI,UACboB,EAASpB,EAAMoB,SAAW,EAAE,SAE5BxB,GAAKI,OAASJ,EAAKI,MAAMqB,WACbzB,EAAKI,MAAMqB,QAGdpF,KAAKgD,QAChBN,OAAO,QACNC,KAAK,OAAQ,SACbA,KAAK,IAAK+B,EAAII,KAAOK,EAAO,IAC5BxC,KAAK,IAAK+B,EAAIE,IAAMO,EAAO,IAC3BxC,KAAK,KAAMsC,GACXtC,KAAK,KAAMsC,GACXtC,KAAK,QAASoB,EAAMlB,OAAS6B,EAAI7B,OACjCF,KAAK,eAAgB,GACrBA,KAAK,iBAAkB,GACvBA,KAAK,eAAgBoB,EAAMsB,aAAe,GAC1C1C,KAAK,SAAU,SACfA,KAAK,SAAUoB,EAAMjB,QAAU4B,EAAI5B,kDAKrBW,EAASE,MACtBe,GAAM1E,KAAKgF,QAAQvB,GACnB6B,EAAKZ,EAAII,KAAOJ,EAAI7B,MAAQ,EAC5B0C,EAAKb,EAAIE,IAAMF,EAAI5B,OAAS,EAC5BiB,EAAQJ,EAAKI,UACboB,EAASpB,EAAMoB,SAAW,EAAE,SAEnBnF,MAAKgD,QAChBN,OAAO,UACPC,KAAK,IAAKgB,EAAKI,MAAMqB,QAAUV,EAAI7B,MAAQ,GAC3CF,KAAK,OAAQ,SACbA,KAAK,eAAgB,GACrBA,KAAK,eAAgBoB,EAAMsB,aAAe,GAC1C1C,KAAK,iBAAkB,GACvBA,KAAK,SAAU,SACfA,KAAK,KAAM2C,EAAKH,EAAO,IACvBxC,KAAK,KAAM4C,EAAKJ,EAAO,4CAKV1B,EAASE,UACpB6B,GAAa/B,EAAQgC,cAClBD,GAAoC,OAAtBA,EAAWxB,WAClBwB,EAAWC,iBAGrBf,GAAM1E,KAAKgF,QAAQQ,SAEVxF,MAAKgD,QAChBN,OAAO,KACPC,KAAK,YAAa,aAAa+B,EAAII,KAAK,KAAKJ,EAAIE,IAAI,KACrDlC,OAAO,QACNC,KAAK,OAAQ,SACbA,KAAK,eAAgB,GACrBA,KAAK,eAAgBgB,EAAKI,MAAMJ,EAAKI,MAAMsB,aAAa,EAAE,GAC1D1C,KAAK,SAAU,SACfA,KAAK,IAAKd,SAAU4B,GAASd,KAAK,sCAU9BgB,eACF+B,mBACAC,YAAYhC,GACV3D,mDAQFgB,OAAO4B,MAAM,UAAW,QACtB5C,6CAQHA,MAAKkB,kBACD0E,oBAAoB,SAAU5F,KAAKqD,sBAGtCqC,mBAEAtE,gBAAgByE,eAChBrE,eAAeqE,eACfnE,eAAemE,UAEb7F,cC1RY8F,wFAKFC,EAAWC,EAAWC,MACnCC,GAAWlG,KAAKmG,mBAAmBJ,EAAWE,mBAKxCC,OAJClG,KAAKoG,uBAAuBF,EAAUH,EAAWE,EAAUD,OAC5DhG,KAAKqG,sBAAsBH,EAAUH,EAAWE,EAAUD,mDAS9CE,EAAUH,EAAWE,EAAUD,qBAEzCD,EAAUjB,KAAOiB,EAAUlD,MAAM,EAAIoD,EAASpD,kBAC7CkD,EAAUjB,KAAOmB,EAASpD,MAAQmD,EAAUnD,oBAC1CkD,EAAUjB,KAAOiB,EAAUlD,MAAM,EAAIoD,EAASpD,qBAC7CkD,EAAUjB,KAAOkB,EAAUnD,MAAQoD,EAASpD,OAC1DqD,iDAGmBA,EAAUH,EAAWE,EAAUD,qBAExCD,EAAUnB,IAAMmB,EAAUjD,OAASmD,EAASnD,mBAC3CiD,EAAUnB,IAAMmB,EAAUjD,OAAO,EAAImD,EAASnD,qBAC5CiD,EAAUnB,IAAMoB,EAAUlD,OAASmD,EAASnD,sBAC3CiD,EAAUnB,IAAMoB,EAAUlD,OAASmD,EAASnD,QAC1DoD,4CAGcH,EAAWE,MACvBC,GAAWlG,KAAKmG,mBAAmBJ,EAAWE,mBAKxCC,OAJClG,KAAKsG,sBAAsBJ,EAAUH,EAAWE,OACjDjG,KAAKuG,qBAAqBL,EAAUH,EAAWE,kDASpCC,EAAUH,EAAWE,qBAE9BF,EAAUjB,KAAOiB,EAAUlD,MAAM,cAChCkD,EAAUjB,KAAOmB,EAASpD,oBACxBkD,EAAUjB,KAAOiB,EAAUlD,MAAM,iBAChCkD,EAAUjB,KAAOmB,EAASpD,OACxCqD,gDAGkBA,EAAUH,EAAWE,qBAE7BF,EAAUnB,IAAMmB,EAAUjD,mBACzBiD,EAAUnB,IAAMmB,EAAUjD,OAAO,gBAC/BiD,EAAUnB,IAAMqB,EAASnD,sBACxBiD,EAAUnB,IAAMqB,EAASnD,QACvCoD,8CAGgBH,MACdS,IAAST,EAAUjB,KAAMiB,EAAUnB,KACnC6B,GAAqD,GAAvC3E,SAASK,gBAAgBE,YAAwD,GAAtCP,SAASK,gBAAgBI,cAClF2D,GAAY,OAAQ,cAEvB,QAAS,UAAU1C,QAAQ,SAACkD,EAAGlG,GAC3BgG,EAAMhG,GAAGiG,EAAWjG,OACdA,GAAKkG,KAITR,EAASS,KAAK,cCpETC,EAAS,SAACnD,MAClBiB,GAAMjB,EAAQkB,mCAGbD,EAAIE,IAAM9C,SAASC,KAAK8C,eACvBH,EAAII,KAAOhD,SAASC,KAAKgD,iBACxBL,EAAII,KAAOhD,SAASC,KAAK8C,UAAYH,EAAI7B,aACxC6B,EAAIE,IAAM9C,SAASC,KAAK8C,UAAYH,EAAI5B,aACxC4B,EAAI7B,aACJ6B,EAAI5B,SAeA+D,EAAc,SAACjD,MACvBkD,GAAQlD,EAAMmD,IAAI,kBAAMH,GAAOI,KAE/BtC,OACCzC,KAAKgF,IAAIvG,MAAMuB,KAAM6E,EAAMC,IAAI,kBAAKrC,GAAIE,YACvC3C,KAAKgF,IAAIvG,MAAMuB,KAAM6E,EAAMC,IAAI,kBAAKrC,GAAII,cACvC7C,KAAKC,IAAIxB,MAAMuB,KAAM6E,EAAMC,IAAI,kBAAKrC,GAAIwC,gBACvCjF,KAAKC,IAAIxB,MAAMuB,KAAM6E,EAAMC,IAAI,kBAAKrC,GAAIyC,oBAG5CtE,MAAQ6B,EAAIwC,MAAQxC,EAAII,OACxBhC,OAAS4B,EAAIyC,OAASzC,EAAIE,IAEvBF,GAcK0C,EAAe,SAACC,MACxBzD,GAAQyD,EAAUzD,cAElBA,GAAM,IAA0B,QAApBA,EAAM,GAAGI,QACjB6C,EAAYjD,GAEZgD,EAAOhD,EAAM,KC3DF0D,wBACR1G,EAASC,kBAKfC,SAAWF,OAMXG,aAAe,UAMfG,WAAY,OAEZC,OAASN,OACTO,gBAAkBpB,KAAKmB,OAAOE,GAAG,QAASrB,KAAKsB,SAASC,KAAKvB,YAC7DwB,eAAiBxB,KAAKmB,OAAOE,GAAG,OAAQrB,KAAKyB,QAAQF,KAAKvB,YAC1D0B,eAAiB1B,KAAKmB,OAAOE,GAAG,OAAQrB,KAAK2B,QAAQJ,KAAKvB,YAC1DuH,kBAAoB,GAAIzB,yDAItB9F,MAAKwH,qDASLxH,MAAKkB,yCASNU,eAEDb,aAAec,SAAUD,GAAYE,SAASC,WAE9C0F,oBACAvG,WAAY,EAEVlB,iDAOF0H,SAAW1H,KAAKe,aAAa2B,OAAO,OACvCC,KAAK,QAASC,EAAA,MAAe,IAAIA,EAAM,4BAEpC4E,UAAYG,EAAgB3H,KAAK0H,SAASV,uDAQ1CU,SAAS9E,MAAM,aAAc,WAC3B5C,qCAOA2D,OACFA,EAAK/B,0BACJ8F,SAAS9E,MAAM,aAAc,eAG7B8E,SAAS9E,MAAM,aAAc,cAG/ByE,GAAYxF,YAAa8B,EAAK/B,UAC9BmE,EAAY4B,EAAsBN,GAClCO,EAAgB5H,KAAKuH,kBAAkBM,iBAAiB9B,EAAW/F,KAAKwH,uBAEvEE,SAASI,aAAaC,SAAS,GAClCnF,MAAM,MAAOgF,EAAchD,IAAI,MAC/BhC,MAAM,OAAQgF,EAAc9C,KAAK,WAY9B4C,SAAS/E,KAAK,QAASC,EAAA,MAAe,IAAIA,EAAM,SAASgF,EAAc1B,WAErElG,mDAQF0H,SAAS9E,MAAM,UAAW,QACxB5C,mDAQFoB,gBAAgByE,eAChBrE,eAAeqE,eACfnE,eAAemE,UAEhB7F,KAAK0H,eACHA,SAAShE,SAGR1D,cCrIYgI,wBACRpH,EAASC,kBAKfC,SAAWF,OAMXG,aAAe,UAKfG,WAAY,OAMZC,OAASN,OAEToH,OAASpH,EAAMqH,WAAWC,OAAO,mBAA4B,IAAtBxE,EAAKyE,oBAM5CC,YAAcrI,KAAKiI,OAAOxH,OAG3BT,KAAKqI,YAAY,SACf7G,eAAiBxB,KAAKmB,OAAOE,GAAG,OAAQrB,KAAKyB,QAAQF,KAAKvB,6DAUzDA,MAAKkB,yCASNU,eAEDb,aAAec,SAAUD,QAEzB0G,uBACAC,oBAEArH,WAAY,EAEVlB,oDAIFwI,YAAcxI,KAAKe,aAAa2B,OAAO,OAAO+F,QAAQ7F,EAAM,uBAAuB,0DAInFqF,OAAOS,MAAM,GAAGlF,QAAQ,aACvBgF,YAAY9F,OAAO,OACtB+F,QAAQ7F,EAAM,yBAAyB,0CAI9Be,MACRgF,GAAY3I,KAAK4I,cAAcjF,eACtB,IAAIf,EAAM,yBACrBkF,aACAC,SAAS/H,KAAKc,SAAS+H,mBACvBjG,MAAM,QAAS+F,EAAY,4CAGhBhF,UACLA,EAAKmF,aAAe9I,KAAKc,SAASgI,aAAe9I,KAAKqI,sDAG7CjI,EAAOuD,UAChBA,EAAKmF,aAAe9I,KAAKc,SAASgI,cAAgB1I,EAAQ,GAAKJ,KAAKqI,4CAOrE1E,OACmB,IAAtBA,EAAKyE,8BACHI,YACHV,aACAC,SAAS/H,KAAKc,SAAS+H,mBACvBjG,MAAM,QAAS,UAKdxC,GAAQJ,KAAKiI,OAAO5H,QAAQsD,GAC5Bd,EAAQ7C,KAAK+I,kBAAkB3I,EAAOuD,QACrC6E,YACHV,aACAC,SAAS/H,KAAKc,SAAS+H,mBACvBjG,MAAM,QAASC,EAAM,WAElBmG,aAAarF,2CAQd3D,MAAKkB,gBACHsH,YAAY9E,SAGd1D,KAAKwB,qBACHA,eAAeqE,UAGd7F,cC9HYiJ,wBACRrI,EAASC,kBAKfC,SAAWF,OAMXG,aAAe,UAMfG,WAAY,OAEZC,OAASN,OAETO,gBAAkBpB,KAAKmB,OAAOE,GAAG,QAASrB,KAAKsB,SAASC,KAAKvB,YAC7DwB,eAAiBxB,KAAKmB,OAAOE,GAAG,OAAQrB,KAAKyB,QAAQF,KAAKvB,YAC1D0B,eAAiB1B,KAAKmB,OAAOE,GAAG,OAAQrB,KAAK2B,QAAQJ,KAAKvB,YAE1DuH,kBAAoB,GAAIzB,QACxBoD,eAAiB,GAAI5B,GAAc1G,EAASC,QAC5CsI,kBAAoB,GAAIC,GAAiBxI,EAASC,wDAUhDb,MAAKkB,yCASNU,eAEDb,aAAec,SAAUD,GAAYE,SAASC,WAE9CsH,qBACAH,eAAeI,OAAO1H,QACtBuH,kBAAkBG,OAAOtJ,KAAKuJ,UAAUvC,aACxC9F,WAAY,EAEVlB,6DAIFuJ,UAAYvJ,KAAKe,aAAa2B,OAAO,OACxCC,KAAK,QAASC,EAAA,OAAkB,IAAM5C,KAAKc,SAAS0I,iBACpD5G,MAAM,QAAS5C,KAAKc,SAASgI,YAAc,WAExCW,WAAazJ,KAAKuJ,UAAU7G,OAAO,OACtCrB,GAAG,QAASrB,KAAK0J,aAAanI,KAAKvB,OACnC2C,KAAK,QAASC,EAAM,mBAAqB,iCAEtC+G,eAAiB3J,KAAKyJ,WAAW/G,OAAO,QAC3CC,KAAK,QAAQC,EAAM,yBACnBgH,KAAK5J,KAAKc,SAAS+I,eAEhBJ,WAAWpI,GAAG,YAAa,aAC1BoI,WAAWhB,QAAQ7F,EAAM,0BAA0B,UAGpD6G,WAAWpI,GAAG,WAAY,aACzBoI,WAAWhB,QAAQ7F,EAAM,0BAA0B,UAGpDkH,eAAiB9J,KAAKyJ,WAAW/G,OAAO,OAAOC,KAAK,QAAQC,EAAM,mBAAmB,oCAErFmH,WAAa/J,KAAKuJ,UAAU7G,OAAO,OACtCC,KAAK,QAASC,EAAM,mBAAqB,4BACzCvB,GAAG,QAASrB,KAAKgK,aAAazI,KAAKvB,OACnC4J,KAAK5J,KAAKc,SAASmJ,eAEhBF,WAAWrH,OAAO,OAAOC,KAAK,QAAQC,EAAM,mBAAmB,mCAE/DsH,SAAWlK,KAAKuJ,UAAU7G,OAAO,OACpCC,KAAK,QAASC,EAAM,gBAAkB,8BAEnCuH,QAAUnK,KAAKuJ,UAAU7G,OAAO,OACnCC,KAAK,QAASC,EAAM,eAAiB,6BAElCwH,SAAWpK,KAAKuJ,UAAU7G,OAAO,OACpCC,KAAK,QAASC,EAAM,gBAAkB,oBACtCvB,GAAG,QAASrB,KAAKqK,cAAc9I,KAAKvB,oDAIjCmB,OAAOmJ,mDAIPb,WAAWhB,QAAQ7F,EAAM,0BAA0B,GAEpD5C,KAAKmB,OAAOoJ,eACVpJ,OAAOqJ,YAEPrJ,OAAOmJ,mDAKRnJ,OAAOsJ,sDAQPlB,UAAU3G,MAAM,UAAW,SACzB5C,qCAOA2D,WACFuG,SAASN,KAAKjG,EAAK+G,YACnBP,QAAQP,KAAKjG,EAAKgH,WAElBZ,WAAWtB,QAAQ7F,EAAM,0BAA2B5C,KAAKmB,OAAOyJ,gBAChEnB,WAAWhB,QAAQ7F,EAAM,0BAA2B5C,KAAKmB,OAAOoJ,gBAChEZ,eAAeC,KAAKjG,EAAKkG,UAAY7J,KAAKc,SAAS+I,eACnDN,UAAU5G,KAAK,QAASC,EAAA,OAAkB,KAAOe,EAAK6F,iBAAmBxJ,KAAKc,SAAS0I,uBACvFD,UAAU3G,MAAM,SAAUe,EAAKmF,aAAe9I,KAAKc,SAASgI,aAAe,OAE3EnF,EAAK/B,0BACJ2H,UAAUzB,aAAaC,SAAS/H,KAAKc,SAAS+H,mBACjDjG,MAAM,OAAQ,MACdA,MAAM,MAAO,SAKZyE,GAAYxF,YAAa8B,EAAK/B,UAE9BmE,EAAY4B,EAAsBN,GAClCrB,EAAY2B,EAAgB3H,KAAKuJ,UAAUvC,QAC3C6D,EAAiB7K,KAAKuH,kBAAkBuD,kBAAkB/E,EAAWC,EAAWhG,KAAKkJ,eAAe6B,2BAEnGxB,UAAUzB,aAAaC,SAAS/H,KAAKc,SAAS+H,mBACjDjG,MAAM,OAAQiI,EAAe/F,KAAK,MAClClC,MAAM,MAAOiI,EAAejG,IAAI,WAE7B2E,UAAUd,QAAQ7F,EAAM,UAAUiI,EAAe3E,WAAW,GAE1DlG,mDAQFuJ,UAAU3G,MAAM,UAAW,QACzB5C,mDAQFoB,gBAAgByE,eAChBrE,eAAeqE,eACfnE,eAAemE,eAEfsD,kBAAkBtD,eAClBqD,eAAerD,UAEb7F,cC3LYgI,wBACRpH,EAASC,kBAKfC,SAAWF,OAMXG,aAAe,UAKfG,WAAY,OAMZC,OAASN,OAMTmK,YAAc,GAAIxL,YAIlByL,cAAgB,GAAItK,GAAaC,EAASC,QAC1CqK,gBAAkB,GAAIjC,GAAerI,EAASC,wDAS5Cb,MAAKkB,yCASNU,eAEDb,aAAec,SAAUD,GAAYE,SAASC,WAE9CkJ,cAAc3B,OAAO1H,QACrBsJ,gBAAgB5B,OAAO1H,QAEvBV,WAAY,EAEVlB,gCASLmL,EAAWpL,eACRiL,YAAY3J,GAAG8J,EAAWpL,GACxBC,iCASJmL,EAAWpL,eACTiL,YAAY9K,IAAIiL,EAAWpL,GACzBC,mDAQFgL,YAAYnF,eAEZoF,cAAcpF,eACdqF,gBAAgBrF,UAEd7F,cCpGYoL,wBACRxK,kBAKNqH,OAASrH,EAAQyK,eAEjBC,aAAe,UACfC,mBAAqB,OAMrBP,YAAc,GAAIxL,+EAuBhBQ,MAAKiI,4CAIPsD,kBAAoB,OACpBD,aAAetL,KAAKiI,OAAOjI,KAAKuL,wBAChCP,YAAYQ,KAAK,QAASxL,KAAKsL,aAActL,KAAKuL,wBAClDP,YAAYQ,KAAK,OAAQxL,KAAKsL,aAActL,KAAKuL,uDAIjDP,YAAYQ,KAAK,OAAQxL,KAAKsL,aAActL,KAAKuL,wBACjDD,aAAe,UACfC,mBAAqB,iCAItBvL,KAAKuK,iBACHe,aAAetL,KAAKiI,SAASjI,KAAKuL,wBAClCP,YAAYQ,KAAK,OAAQxL,KAAKsL,aAActL,KAAKuL,mDAKnDvL,KAAK4K,iBACHU,aAAetL,KAAKiI,SAASjI,KAAKuL,wBAClCP,YAAYQ,KAAK,OAAQxL,KAAKsL,aAActL,KAAKuL,4DAKhDvL,MAAKiI,OAAOxH,OAAST,KAAKuL,kBAAmB,0CAI7CvL,MAAKuL,kBAAoB,6BAS9BJ,EAAWpL,eACRiL,YAAY3J,GAAG8J,EAAWpL,GACxBC,iCASJmL,EAAWpL,eACTiL,YAAY9K,IAAIiL,EAAWpL,GACzBC,mDAQFgL,YAAYnF,eACZyF,aAAe,KAEbtL,cC1GYyL,wBACR7K,EAASC,kBAKfC,SAAWF,OACXO,OAASN,OAETO,gBAAkBpB,KAAKmB,OAAOE,GAAG,QAASrB,KAAKsB,SAASC,KAAKvB,YAC7D0B,eAAiB1B,KAAKmB,OAAOE,GAAG,OAAQrB,KAAK2B,QAAQJ,KAAKvB,oEAQrD8B,UAAUT,GAAG,kBAAmBrB,KAAK0L,WAAWnK,KAAKvB,OACxDA,6CAQY,aAAhB6B,QAAS8J,KAAsC,aAAhB9J,QAAS8J,SACrCxK,OAAOyJ,UAAU5K,KAAKmB,OAAOsJ,OAAOzK,KAAKmB,OAAOmJ,WAC/C,IAAoB,cAAhBzI,QAAS8J,KAAuC,SAAhB9J,QAAS8J,SAC9CxK,OAAOoJ,UAAUvK,KAAKmB,OAAOqJ,OAAOxK,KAAKmB,OAAOmJ,WAC/C,CAAA,GAAoB,UAAhBzI,QAAS8J,gBACdxK,OAAOmJ,eAKJsB,mEAQC9J,UAAUT,GAAG,kBAAmB,MACnCrB,mDAQF2B,eAEAP,gBAAgByE,eAChBnE,eAAemE,UAEb7F,2CV3CIY,6BAKNE,iBAMAA,SAASqC,UAAY9D,EAAeuB,EAAQuC,UW7BzB,gBXmCnBrC,SAASsC,YAAc/D,EAAeuB,EAAQwC,YW7BzB,SXmCrBtC,SAAS+I,SAAWxK,EAAeuB,EAAQiJ,SWvBzB,aX6BlB/I,SAAS0I,gBAAkBnK,EAAeuB,EAAQ4I,gBWvBxB,SX6B1B1I,SAAS+H,kBAAoBxJ,EAAeuB,EAAQiI,kBWzCzB,UX+C3B/H,SAASgI,YAAczJ,EAAeuB,EAAQkI,YWHzB,UXSrBhI,SAASuK,MAAQzK,EAAQyK,WAMzBL,YAAc,GAAIxL,iCAqBlB2B,OAAS,GAAIiK,GAAapL,KAAKc,eAE/BK,OAAOE,GAAG,QAAS,SAACsC,EAAMvD,KACzB4K,YAAYQ,KAAK,QAAS7H,EAAMvD,UAGjCe,OAAOE,GAAG,OAAQ,SAACsC,EAAMvD,KACxB4K,YAAYQ,KAAK,OAAQ7H,EAAMvD,UAGhCe,OAAOE,GAAG,OAAQ,SAACsC,EAAMvD,KACxB4K,YAAYQ,KAAK,OAAQ7H,EAAMvD,UAOhCyL,iBAAmB,GAAI7D,GAAgBhI,KAAKc,SAAUd,KAAKmB,aAK3D2K,mBAAqB,GAAIL,GAAkBzL,KAAKc,SAAUd,KAAKmB,aAE/DmI,8CASH6B,EAAWpL,eACRiL,YAAY3J,GAAG8J,EAAWpL,GACxBC,iCASJmL,EAAWpL,eACTiL,YAAY9K,IAAIiL,EAAWpL,GACzBC,mDAQFgL,YAAYnF,eACZgG,iBAAiBhG,eACjB/E,SAAW,UACXK,OAAO0E,eACPiG,mBAAmBjG,UAEjB7F,oCAQD4B,eACDiK,iBAAiBvC,OAAO1H,GACtB5B,iDAQFmB,OAAO4K,QACL/L,gDASFmB,OAAOmJ,OACLtK"}