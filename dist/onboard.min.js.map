{"version":3,"file":"onboard.min.js","sources":["../src/Onboard.js","../src/utils/Observable.js","../src/MaskRenderer.js","../src/PositionResolver.js","../src/ArrowRenderer.js","../src/WindowRenderer.js","../src/OnboardRenderer.js","../src/OnboardModel.js","../src/OnboardKeyHandler.js","../src/OnboardDefaults.js"],"sourcesContent":["import Observable from \"./utils/Observable\";\nimport * as Defaults from \"./OnboardDefaults\";\nimport OnboardRenderer from \"./OnboardRenderer\";\nimport OnboardModel from \"./OnboardModel\";\nimport OnboardKeyHandler from \"./OnboardKeyHandler\";\n\n/**\n * @private \n * @param {*} optionValue option value \n * @param {*} defaultOptionValue default option value \n * @returns option or default option value \n */\nfunction getOptionValue(optionValue, defaultOptionValue) {\n\treturn typeof optionValue == \"undefined\" ? defaultOptionValue : optionValue;\n}\n\n/**\n * @class\n * Main onboard class\n * @param {Object} options\n */\nclass Onboard {\n\tconstructor(options) {\n\t\t/**\n\t\t * @private\n\t\t * Options property exposing widget's options\n\t\t */\n\t\tthis._options = {};\n\n\t\t/**\n\t\t * @public\n\t\t * fill color\n\t\t */\n\t\tthis._options.fillColor = getOptionValue(options.fillColor, Defaults.FILL_COLOR);\t\t\n\n\t\t/**\n\t\t * @public\n\t\t * fill opacity\n\t\t */\n\t\tthis._options.fillOpacity = getOptionValue(options.fillOpacity, Defaults.FILL_OPACITY);\n\n\t\t/**\n\t\t * @public\n\t\t * Next text\n\t\t */\n\t\tthis._options.nextText = getOptionValue(options.nextText, Defaults.NEXT_TEXT);\t\t\n\n\t\t/**\n\t\t * @public\n\t\t * Understand text\n\t\t */\n\t\tthis._options.understandText = getOptionValue(options.understandText, Defaults.UNDERSTAND_TEXT);\t\t\n\n\t\t/**\n\t\t * @public\n\t\t * animation duration\n\t\t */\n\t\tthis._options.animationDuration = getOptionValue(options.animationDuration, Defaults.ANIMATION_DURATION);\t\t\n\n\t\t/**\n\t\t * @public\n\t\t * steps\n\t\t */\n\t\tthis._options.steps = options.steps;\n\n\t\t/**\n\t\t * @private\n\t\t * observable handler\n\t\t */\n\t\tthis._observable = new Observable([\n\t\t\t\n\t\t]);\n\n\t\tthis._model = new OnboardModel(this._options);\n\n\t\t/**\n\t\t * @private\n\t\t * OnboardRenderer\n\t\t */\n\t\tthis._onboardRenderer = new OnboardRenderer(this._options, this._model);\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tthis._onboardKeyHandler = new OnboardKeyHandler(this._options, this._model);\t\t\n\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Bind widget event\n\t * @param {String} event event name\n\t * @param {Function} handler event handler\n\t * @returns {Onboard} returns this widget instance\n\t */\n\ton(eventName, handler) {\n\t\tthis._observable.on(eventName, handler);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unbind widget event\n\t * @param {String} event event name\n\t * @param {Function} [handler] event handler\n\t * @returns {Onboard} returns this widget instance\n\t */\n\toff(eventName, handler) {\n\t\tthis._observable.off(eventName, handler);\n\t\treturn this;\n\t}\t\n\n\t/**\n\t * Destroys widget\n\t * @returns {Onboard} returns this widget instance\n\t */\n\tdestroy() {\n\t\tthis._observable.destroy();\n\t\tthis._onboardRenderer.destroy();\n\t\tthis._options = null;\n\t\tthis._model.destroy();\n\t\tthis._onboardKeyHandler.destroy();\n\n\t\treturn this;\n\t}\t\n\n\t/**\n\t * Render logic of this widget\n\t * @param {String|DOMElement} selector selector or DOM element \n\t * @returns {Onboard} returns this widget instance\n\t */\n\trender(selector) {\n\t\tthis._onboardRenderer.render(selector);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Starts onboarding\n\t * @returns {Onboard} returns this widget instance \n\t */\n\tstart() {\n\t\tthis._model.start();\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Stops\n\t * @returns {Onboard} returns this widget instance \n\t */\n\tstop() {\n\t\tthis._model.stop();\n\t\treturn this;\n\t}\t\n}\n\nexport default Onboard;\n","/**\r\n * @class\r\n * Observable class, handles binding and firing events\r\n * @param {Array} events list of events for this observable\r\n */\r\nexport default class Observable {\r\n    /**\r\n     * @param {Array} events\r\n     */\r\n    constructor(events = []) {\r\n        // create a map of handlers where each event has an array of bound handlers\r\n        this._handlers = events.reduce((acc, cur)=>{\r\n            acc[cur] = [];\r\n            return acc;\r\n        },{});\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Bind event\r\n\t * @param {String} event event name\r\n\t * @param {Function} handler event handler\r\n\t */\r\n    on(event, handler) {\r\n        if (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tthis._handlers[event].push(handler);\r\n\t\treturn {\r\n\t\t\tdestroy:()=>{\r\n\t\t\t\tthis.off(event, handler)\r\n\t\t\t}\r\n\t\t};\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Unbind event\r\n\t * @param {String} event event name\r\n\t * @param {Function} [handler] event handler, optional\r\n\t */\r\n    off(event, handler) {\r\n        if (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tif (!handler) {\r\n\t\t\tthis._handlers[event] = [];\r\n\t\t} else {\r\n\t\t\tvar handlers = this._handlers[event];\r\n\t\t\tvar index = handlers.indexOf(handler);\r\n\t\t\tif (index != -1){\r\n\t\t\t\thandlers.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Fire widget event\r\n\t * @param {String} event event name\r\n\t * @param {*} ...args event arguments\r\n\t */\r\n\tfire(event, ...args) {\r\n\t\tif (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tvar handlers = this._handlers[event];\r\n\t\tfor (var i = 0; i < handlers.length; i++) {\r\n\t\t\thandlers[i].apply(this, args);\r\n\t\t}\r\n\t\treturn this;\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys this observable, removes events and so on \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._handlers = null;\r\n\t\treturn this;\r\n    }\r\n\t\r\n}","import style from \"./Onboard.css\";\r\nimport * as d3 from \"d3\";\r\n\r\n/**\r\n * @class\r\n * Onboard class\r\n * @param {Object} options\r\n */\r\nexport default class MaskRenderer {\r\n\tconstructor(options, model) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._options = options;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * DOM container of this widget\r\n\t\t */\r\n\t\tthis._containerEl = null;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Mask Element\r\n\t\t */\r\n\t\tthis._svgEl = null;\t\t\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Step elements\r\n\t\t */\r\n\t\tthis._stepElements = [];\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * true if Onboard has been rendered\r\n\t\t */\r\n\t\tthis._rendered = false;\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._model = model;\r\n\r\n\t\tthis._onStartBinding = this._model.on(\"start\", this._onStart.bind(this));\r\n\t\tthis._onStepBinding = this._model.on(\"step\", this._onStep.bind(this));\r\n\t\tthis._onStopBinding = this._model.on(\"stop\", this._onStop.bind(this));\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Returns whether Onboard has been rendered or not\r\n\t * @returns {boolean} true if Onboard has been rendered\r\n\t */\r\n\tisRendered() {\r\n\t\treturn this._rendered;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Render logic of this widget\r\n\t * @param {String|DOMElement} selector selector or DOM element \r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\trender(selector) {\r\n\t\t// get container element using selector or given element\r\n\t\tthis._containerEl = d3.select(selector || document.body);\r\n\r\n\t\tthis._renderMask();\r\n\t\tthis._rendered = true;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t_getViewSize(){\r\n\t\treturn {\r\n\t\t\twidth: Math.max(document.documentElement.offsetWidth, document.documentElement.clientWidth),\r\n\t\t\theight: Math.max(document.documentElement.offsetHeight, document.documentElement.clientHeight)\r\n\t\t}\r\n\t}\r\n\r\n\t_renderMask(){\r\n\t\tvar size = this._getViewSize();\r\n\r\n\t\t// render SVG\r\n\t\tthis._svgEl = this._containerEl.append(\"svg\")\r\n\t\t\t.attr(\"class\", style[\"svg\"])\r\n\t\t\t.attr(\"width\", size.width)\r\n\t\t\t.attr(\"height\", size.height)\r\n\r\n\t\t// defs el\r\n\t\tthis._defsEl = this._svgEl.append(\"defs\");\r\n\r\n\t\tthis._maskEl = this._defsEl.append(\"mask\")\r\n\t\t\t.attr(\"class\", style[\"mask\"])\r\n\t\t\t.attr(\"id\", \"onboarding-mask\")\r\n\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t.attr(\"x\", 0)\r\n\t\t\t.attr(\"y\", 0)\r\n\r\n\t\tthis._maskBg = this._maskEl.append(\"rect\")\r\n\t\t\t.attr(\"class\", style[\"bg\"])\r\n\t\t\t.attr(\"x\", 0)\r\n\t\t\t.attr(\"y\", 0)\r\n\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t.attr(\"fill\", \"white\")\r\n\r\n\t\tthis._bgEl = this._svgEl.append(\"rect\")\r\n\t\t\t.attr(\"class\", style[\"bg\"])\r\n\t\t\t.attr(\"width\", \"100%\")\r\n\t\t\t.attr(\"height\", \"100%\")\r\n\t\t\t.attr(\"x\", 0)\r\n\t\t\t.attr(\"y\", 0)\r\n\t\t\t.attr(\"mask\", \"url(#onboarding-mask)\")\r\n\t\t\t.attr(\"fill\", this._options.fillColor)\r\n\t\t\t.attr(\"fill-opacity\", this._options.fillOpacity)\r\n\r\n\t\tthis._onWindowResize = ()=>{\r\n\t\t\tvar size = this._getViewSize();\r\n\t\t\tthis._svgEl.attr(\"width\", size.width);\r\n\t\t\tthis._svgEl.attr(\"height\", size.height);\r\n\t\t}\t\r\n\r\n\t\twindow.addEventListener(\"resize\", this._onWindowResize);\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStart() {\r\n\t\tthis._svgEl.style(\"display\", \"block\");\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t_clearSteps(){\r\n\t\tthis._stepElements.forEach(element=>element.remove());\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_renderStep(step){\r\n\t\tlet selection = step.selection; \r\n\t\tselection.nodes().forEach(element=>{\r\n\t\t\tthis._stepElements.push(this._renderStepElement(element, step));\r\n\t\t});\r\n\t}\r\n\r\n\t_renderStepElement(element, step){\r\n\t\tvar shape = step.shape || {\r\n\t\t\ttype:\"rectangle\"\r\n\t\t};\r\n\r\n\t\tif (element.tagName == \"path\"){\r\n\t\t\treturn this._renderPathMask(element, step);\r\n\t\t} else if (shape.type == \"circle\"){\r\n\t\t\treturn this._renderCircleMask(element, step);\r\n\t\t} else {\r\n\t\t\treturn this._renderRectangleMask(element, step);\r\n\t\t}\r\n\t}\r\n\t_getBorderRadius(el){\r\n\t\treturn parseFloat(window.getComputedStyle(el, null).getPropertyValue(\"border-top-left-radius\"));\r\n\t}\r\n\r\n\t_getBox(element){\r\n\t\tvar box = element.getBoundingClientRect();\r\n\t\treturn {\r\n\t\t\ttop:box.top +  + document.body.scrollTop,\r\n\t\t\tleft:box.left +  + document.body.scrollLeft,\r\n\t\t\twidth: box.width,\r\n\t\t\theight:box.height\r\n\t\t}\r\n\t}\r\n\r\n\t_renderRectangleMask(element, step){\r\n\t\tvar box = this._getBox(element);\t\t\r\n\t\tvar borderRadius = this._getBorderRadius(element);\r\n\r\n\t\tvar stepEl = this._maskEl\r\n\t\t\t.append(\"rect\")\r\n\t\t\t\t.attr(\"fill\", \"black\")\r\n\t\t\t\t.attr(\"x\", box.left)\r\n\t\t\t\t.attr(\"y\", box.top)\r\n\t\t\t\t.attr(\"rx\", borderRadius)\r\n\t\t\t\t.attr(\"ry\", borderRadius)\r\n\t\t\t\t.attr(\"width\", box.width)\r\n\t\t\t\t.attr(\"fill-opacity\", 1)\r\n\t\t\t\t.attr(\"stroke-opacity\", 1)\r\n\t\t\t\t.attr(\"stroke-width\", step.shape?step.shape.offset||0:0)\r\n\t\t\t\t.attr(\"stroke\", \"black\")\r\n\t\t\t\t.attr(\"height\", box.height)\r\n\r\n\t\treturn stepEl;\r\n\t}\r\n\r\n\t_renderCircleMask(element, step){\r\n\t\tvar box = this._getBox(element);\r\n\t\tvar cx = box.left + box.width / 2;\r\n\t\tvar cy = box.top + box.height / 2;\r\n\r\n\t\tvar stepEl = this._maskEl\r\n\t\t\t.append(\"circle\")\r\n\t\t\t.attr(\"r\", step.shape.radius || box.width /2)\r\n\t\t\t.attr(\"fill\", \"black\")\r\n\t\t\t.attr(\"fill-opacity\", 1)\r\n\t\t\t.attr(\"stroke-width\", step.shape?step.shape.offset||0:0)\r\n\t\t\t.attr(\"stroke-opacity\", 1)\r\n\t\t\t.attr(\"stroke\", \"black\")\r\n\t\t\t.attr(\"cx\", cx)\r\n\t\t\t.attr(\"cy\", cy)\r\n\r\n\t\treturn stepEl;\r\n\t}\r\n\r\n\t_renderPathMask(element, step){\r\n\t\tvar svgElement = element.parentElement; \r\n\t\twhile (svgElement && svgElement.tagName != \"svg\"){\r\n\t\t\tsvgElement = svgElement.parentElement;\r\n\t\t}\r\n\r\n\t\tvar box = this._getBox(svgElement);\r\n\r\n\t\tvar stepEl = this._maskEl\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", \"translate(\"+box.left+\", \"+box.top+\")\")\r\n\t\t\t.append(\"path\")\r\n\t\t\t\t.attr(\"fill\", \"black\")\r\n\t\t\t\t.attr(\"fill-opacity\", 1)\r\n\t\t\t\t.attr(\"stroke-width\", step.shape?step.shape.offset||0:0)\r\n\t\t\t\t.attr(\"stroke\", \"black\")\r\n\t\t\t\t.attr(\"d\", d3.select(element).attr(\"d\"))\r\n\t\t\t\r\n\t\t\r\n\t\treturn stepEl;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStep(step) {\r\n\t\tthis._clearSteps();\r\n\t\tthis._renderStep(step);\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStop() {\r\n\t\tthis._svgEl.style(\"display\", \"none\");\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tif (this._rendered){\r\n\t\t\twindow.removeEventListener(\"resize\", this._onWindowResize);\r\n\t\t}\r\n\r\n\t\tthis._clearSteps();\r\n\r\n\t\tthis._onStartBinding.destroy();\r\n\t\tthis._onStepBinding.destroy();\r\n\t\tthis._onStopBinding.destroy();\r\n\r\n\t\treturn this;\r\n\t}\r\n}","/**\r\n * @class\r\n */\r\nexport default class PositionResolver {\r\n\t/**\r\n\t * @public\r\n\t * @returns {Object}\r\n\t */\r\n\tgetWindowPosition(targetBox, windowBox, arrowBox) {\r\n\t\tvar position = this._getTargetPosition(targetBox, arrowBox);\r\n\t\tvar left = this._getLeftWindowPosition(position, targetBox, arrowBox, windowBox);\r\n\t\tvar top = this._getTopWindowPosition(position, targetBox, arrowBox, windowBox);\r\n\r\n\t\treturn {\r\n\t\t\tposition:position,\r\n\t\t\tleft:left, \r\n\t\t\ttop:top\r\n\t\t}\r\n\t} \t\r\n\r\n\t_getLeftWindowPosition(position, targetBox, arrowBox, windowBox){\r\n\t\treturn {\r\n\t\t\t\"left-top\":targetBox.left + targetBox.width/2 + arrowBox.width,\r\n\t\t\t\"right-top\":targetBox.left - arrowBox.width - windowBox.width,\r\n\t\t\t\"left-bottom\":targetBox.left + targetBox.width/2 + arrowBox.width,\r\n\t\t\t\"right-bottom\":targetBox.left - windowBox.width - arrowBox.width,\r\n\t\t}[position];\r\n\t}\r\n\r\n\t_getTopWindowPosition(position, targetBox, arrowBox, windowBox){\r\n\t\treturn {\r\n\t\t\t\"left-top\":targetBox.top + targetBox.height + arrowBox.height,\r\n\t\t\t\"right-top\":targetBox.top + targetBox.height/2 + arrowBox.height,\r\n\t\t\t\"left-bottom\":targetBox.top - windowBox.height - arrowBox.height,\r\n\t\t\t\"right-bottom\":targetBox.top - windowBox.height + arrowBox.height,\r\n\t\t}[position];\r\n\t}\t\r\n\r\n\tgetArrowPosition(targetBox, arrowBox) {\r\n\t\tvar position = this._getTargetPosition(targetBox, arrowBox);\r\n\t\tvar left = this._getLeftArrowPosition(position, targetBox, arrowBox);\r\n\t\tvar top = this._getTopArrowPosition(position, targetBox, arrowBox);\r\n\r\n\t\treturn {\r\n\t\t\tposition:position,\r\n\t\t\tleft:left, \r\n\t\t\ttop:top\r\n\t\t}\r\n\t}\r\n\r\n\t_getLeftArrowPosition(position, targetBox, arrowBox){\r\n\t\treturn {\r\n\t\t\t\"left-top\":targetBox.left + targetBox.width/2,\r\n\t\t\t\"right-top\":targetBox.left - arrowBox.width,\r\n\t\t\t\"left-bottom\":targetBox.left + targetBox.width/2 ,\r\n\t\t\t\"right-bottom\":targetBox.left - arrowBox.width,\r\n\t\t}[position];\r\n\t}\r\n\r\n\t_getTopArrowPosition(position, targetBox, arrowBox){\r\n\t\treturn {\r\n\t\t\t\"left-top\":targetBox.top + targetBox.height,\r\n\t\t\t\"right-top\":targetBox.top + targetBox.height/2,\r\n\t\t\t\"left-bottom\":targetBox.top - arrowBox.height,\r\n\t\t\t\"right-bottom\":targetBox.top + arrowBox.height,\r\n\t\t}[position];\r\n\t}\r\n\r\n\t_getTargetPosition(targetBox){\r\n\t\tvar point = [targetBox.left, targetBox.top];\r\n\t\tvar crossPoint = [document.documentElement.clientWidth * 0.5,document.documentElement.clientHeight*0.5];\r\n\t\tvar position = [\"left\", \"top\"];\r\n\r\n\t\t[\"right\", \"bottom\"].forEach((s, i)=>{\r\n\t\t\tif (point[i]>crossPoint[i]){\r\n\t\t\t\tposition[i] = s;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn position.join(\"-\");\r\n\t}\r\n}","import style from \"./Onboard.css\";\r\nimport * as d3 from \"d3\";\r\nimport PositionResolver from \"./PositionResolver\";\r\n\r\n/**\r\n * @class\r\n * @param {Object} options\r\n */\r\nexport default class ArrowRenderer {\r\n\tconstructor(options, model) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._options = options;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * DOM container of this widget\r\n\t\t */\r\n\t\tthis._containerEl = null;\t\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * true if Onboard has been rendered\r\n\t\t */\r\n\t\tthis._rendered = false;\r\n\r\n\t\tthis._model = model;\r\n\t\tthis._onStartBinding = this._model.on(\"start\", this._onStart.bind(this));\r\n\t\tthis._onStepBinding = this._model.on(\"step\", this._onStep.bind(this));\r\n\t\tthis._onStopBinding = this._model.on(\"stop\", this._onStop.bind(this));\r\n\t\tthis._positionResolver = new PositionResolver();\r\n\t}\r\n\r\n\tgetArrowBox(){\r\n\t\treturn this._arrowBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Returns whether Onboard has been rendered or not\r\n\t * @returns {boolean} true if Onboard has been rendered\r\n\t */\r\n\tisRendered() {\r\n\t\treturn this._rendered;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Render logic of this widget\r\n\t * @param {String|DOMElement} selector selector or DOM element \r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\trender(selector) {\r\n\t\t// get container element using selector or given element\r\n\t\tthis._containerEl = d3.select(selector || document.body);\r\n\r\n\t\tthis._renderArrow();\r\n\t\tthis._rendered = true;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t_renderArrow(){\r\n\t\tthis._arrowEl = this._containerEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"arrow\"]+\" \"+style[\"arrow-bottom-right\"])\r\n\r\n\t\tthis._arrowBox = this._getBox(this._arrowEl.node());\r\n\t}\r\n\r\n\r\n\t_getBox(element){\r\n\t\tvar box = element.getBoundingClientRect();\r\n\t\treturn {\r\n\t\t\ttop:box.top +  + document.body.scrollTop,\r\n\t\t\tleft:box.left +  + document.body.scrollLeft,\r\n\t\t\twidth: box.width,\r\n\t\t\theight:box.height\r\n\t\t}\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStart() {\r\n\t\tthis._arrowEl.style(\"display\", \"block\");\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStep(step) {\r\n\t\tvar firstNode = step.selection.nodes()[0];\r\n\t\tvar targetBox = this._getBox(firstNode);\r\n\t\tvar arrowPosition = this._positionResolver.getArrowPosition(targetBox, this._arrowBox);\r\n\r\n\t\tthis._arrowEl.transition().duration(0 /*this._options.animationDuration*/)\r\n\t\t\t.style(\"top\", arrowPosition.top+\"px\")\r\n\t\t\t.style(\"left\", arrowPosition.left+\"px\");\r\n\r\n\t\t\t// epxerimental fading when moving arrow\r\n\t\t// this._arrowEl\r\n\t\t// \t.transition(\"2\")\r\n\t\t// \t.duration(this._options.animationDuration/4)\r\n\t\t// \t.style(\"opacity\", 0)\r\n\t\t// \t.transition().duration(this._options.animationDuration/2)\r\n\t\t// \t.style(\"opacity\", 0)\r\n\t\t// \t.transition().duration(this._options.animationDuration/4)\r\n\t\t// \t.style(\"opacity\", 1);\r\n\r\n\t\tthis._arrowEl.attr(\"class\", style[\"arrow\"]+\" \"+style[\"arrow-\"+arrowPosition.position]);\r\n\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStop() {\r\n\t\tthis._arrowEl.style(\"display\", \"none\");\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._onStartBinding.destroy();\r\n\t\tthis._onStepBinding.destroy();\r\n\t\tthis._onStopBinding.destroy();\r\n\r\n\t\tif (this._arrowEl){\r\n\t\t\tthis._arrowEl.remove();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n}","import style from \"./Onboard.css\";\r\nimport * as d3 from \"d3\";\r\nimport PositionResolver from \"./PositionResolver\";\r\nimport ArrowRenderer from \"./ArrowRenderer\";\r\n\r\n/**\r\n * @class\r\n * @param {Object} options\r\n */\r\nexport default class WindowRenderer {\r\n\tconstructor(options, model) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._options = options;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * DOM container of this widget\r\n\t\t */\r\n\t\tthis._containerEl = null;\t\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * true if Onboard has been rendered\r\n\t\t */\r\n\t\tthis._rendered = false;\r\n\r\n\t\tthis._model = model;\r\n\r\n\t\tthis._onStartBinding = this._model.on(\"start\", this._onStart.bind(this));\r\n\t\tthis._onStepBinding = this._model.on(\"step\", this._onStep.bind(this));\r\n\t\tthis._onStopBinding = this._model.on(\"stop\", this._onStop.bind(this));\r\n\r\n\t\tthis._positionResolver = new PositionResolver();\r\n\t\tthis._arrowRenderer = new ArrowRenderer(options, model);\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Returns whether Onboard has been rendered or not\r\n\t * @returns {boolean} true if Onboard has been rendered\r\n\t */\r\n\tisRendered() {\r\n\t\treturn this._rendered;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Render logic of this widget\r\n\t * @param {String|DOMElement} selector selector or DOM element \r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\trender(selector) {\r\n\t\t// get container element using selector or given element\r\n\t\tthis._containerEl = d3.select(selector || document.body);\r\n\r\n\t\tthis._renderWindow();\r\n\t\tthis._arrowRenderer.render(selector);\r\n\t\tthis._rendered = true;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t_renderWindow(){\r\n\t\tthis._windowEl = this._containerEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"window\"])\r\n\r\n\t\tthis._nextBtnEl = this._windowEl.append(\"div\")\r\n\t\t\t.on(\"click\", this._onNextClick.bind(this))\r\n\t\t\t.attr(\"class\", style[\"window-next-btn\"]);\r\n\r\n\t\tthis._nextBtnTextEl = this._nextBtnEl.append(\"span\")\r\n\t\t\t.attr(\"class\",style[\"window-next-btn-text\"])\r\n\t\t\t.html(this._options.nextText);\r\n\r\n\t\tthis._nextBtnEl.on(\"mouseover\", ()=>{\r\n\t\t\tthis._nextBtnEl.classed(style[\"window-next-btn-hover\"], true);\r\n\t\t});\r\n\r\n\t\tthis._nextBtnEl.on(\"mouseout\", ()=>{\r\n\t\t\tthis._nextBtnEl.classed(style[\"window-next-btn-hover\"], false);\r\n\t\t})\r\n\r\n\t\tthis._nextBtnIconEl = this._nextBtnEl.append(\"div\").attr(\"class\",style[\"window-btn-icon\"]+\" zmdi zmdi-long-arrow-right\");\r\n\r\n\t\tthis._prevBtnEl = this._windowEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"window-prev-btn\"])\r\n\t\t\t.on(\"click\", this._onPrevClick.bind(this))\r\n\t\t\t.html(this._options.prevText)\r\n\r\n\t\tthis._prevBtnEl.append(\"div\").attr(\"class\",style[\"window-btn-icon\"]+\" zmdi zmdi-long-arrow-left\");\t\t\t\r\n\r\n\t\tthis._titleEl = this._windowEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"window-title\"])\r\n\r\n\t\tthis._bodyEl = this._windowEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"window-body\"])\r\n\r\n\t\tthis._closeEl = this._windowEl.append(\"div\")\r\n\t\t\t.attr(\"class\", style[\"window-close\"] + \" zmdi zmdi-close\")\r\n\t\t\t.on(\"click\", this._onCloseClick.bind(this))\r\n\t}\r\n\r\n\t_onCloseClick(){\r\n\t\tthis._model.stop();\r\n\t}\r\n\r\n\t_onNextClick(){\r\n\t\tthis._nextBtnEl.classed(style[\"window-next-btn-hover\"], false);\r\n\t\t\r\n\t\tif (this._model.hasNext()){\r\n\t\t\tthis._model.next();\r\n\t\t} else {\r\n\t\t\tthis._model.stop();\r\n\t\t}\r\n\t}\r\n\r\n\t_onPrevClick(){\r\n\t\tthis._model.prev();\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStart() {\r\n\t\tthis._windowEl.style(\"display\", \"block\");\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t_getBox(element){\r\n\t\tvar box = element.getBoundingClientRect();\r\n\t\treturn {\r\n\t\t\ttop:box.top +  + document.body.scrollTop,\r\n\t\t\tleft:box.left +  + document.body.scrollLeft,\r\n\t\t\twidth: box.width,\r\n\t\t\theight:box.height\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStep(step) {\r\n\t\tthis._titleEl.html(step.title);\r\n\t\tthis._bodyEl.html(step.text);\r\n\r\n\t\tthis._prevBtnEl.classed(style[\"window-button-has-prev\"], this._model.hasPrev());\r\n\t\tthis._nextBtnEl.classed(style[\"window-button-has-next\"], this._model.hasNext());\r\n\r\n\t\tif (this._model.hasNext()){\r\n\t\t\tthis._nextBtnTextEl.html(this._options.nextText)\r\n\t\t} else {\r\n\t\t\tthis._nextBtnTextEl.html(this._options.understandText)\r\n\t\t}\r\n\r\n\t\tvar firstNode = step.selection.nodes()[0];\r\n\t\tvar targetBox = this._getBox(firstNode);\r\n\t\tvar windowBox = this._getBox(this._windowEl.node());\r\n\t\tvar windowPosition = this._positionResolver.getWindowPosition(targetBox, windowBox, this._arrowRenderer.getArrowBox());\r\n\r\n\t\tthis._windowEl.transition().duration(this._options.animationDuration)\r\n\t\t\t.style(\"left\", windowPosition.left+\"px\")\r\n\t\t\t.style(\"top\", windowPosition.top+\"px\");\r\n\r\n\t\tthis._windowEl.attr(\"class\", style[\"window\"]+\" \"+style[\"window-\"+windowPosition.position]);\t\t\r\n\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {MaskRenderer} \r\n\t */\r\n\t_onStop() {\r\n\t\tthis._windowEl.style(\"display\", \"none\");\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._onStartBinding.destroy();\r\n\t\tthis._onStepBinding.destroy();\r\n\t\tthis._onStopBinding.destroy();\r\n\r\n\t\treturn this;\r\n\t}\r\n}","import Observable from \"./utils/Observable\";\r\nimport MaskRenderer from \"./MaskRenderer\";\r\nimport WindowRenderer from \"./WindowRenderer\";\r\nimport * as d3 from \"d3\";\r\n\r\n/**\r\n * @class\r\n * Onboard class\r\n * @param {Object} options\r\n */\r\nexport default class OnboardRenderer {\r\n\tconstructor(options, model) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._options = options;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * DOM container of this widget\r\n\t\t */\r\n\t\tthis._containerEl = null;\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * true if Onboard has been rendered\r\n\t\t */\r\n\t\tthis._rendered = false;\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Model\r\n\t\t */\r\n\t\tthis._model = model;\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * observable handler\r\n\t\t */\r\n\t\tthis._observable = new Observable([\r\n\t\t\t\r\n\t\t]);\t\t\r\n\r\n\t\tthis._maskRenderer = new MaskRenderer(options, model);\r\n\t\tthis._windowRenderer = new WindowRenderer(options, model);\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Returns whether Onboard has been rendered or not\r\n\t * @returns {boolean} true if Onboard has been rendered\r\n\t */\r\n\tisRendered() {\r\n\t\treturn this._rendered;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * Render logic of this widget\r\n\t * @param {String|DOMElement} selector selector or DOM element \r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\trender(selector) {\r\n\t\t// get container element using selector or given element\r\n\t\tthis._containerEl = d3.select(selector || document.body);\r\n\r\n\t\tthis._maskRenderer.render(selector);\r\n\t\tthis._windowRenderer.render(selector);\r\n\r\n\t\tthis._rendered = true;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Bind widget event\r\n\t * @param {String} event event name\r\n\t * @param {Function} handler event handler\r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\ton(eventName, handler) {\r\n\t\tthis._observable.on(eventName, handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind widget event\r\n\t * @param {String} event event name\r\n\t * @param {Function} [handler] event handler\r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\toff(eventName, handler) {\r\n\t\tthis._observable.off(eventName, handler);\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._observable.destroy();\t\r\n\r\n\t\treturn this;\r\n\t}\r\n}","import Observable from \"./utils/Observable\";\r\n\r\n/**\r\n * @class\r\n * @param {Object} options\r\n */\r\nexport default class OnboardModel {\r\n\tconstructor(options) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._steps = options.steps || [];\r\n\r\n\t\tthis._currentStep = null;\r\n\t\tthis._currentStepIndex = -1;\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * observable handler\r\n\t\t */\r\n\t\tthis._observable = new Observable([\r\n\t\t\t\"start\",\r\n\t\t\t\"stop\",\r\n\t\t\t\"step\"\r\n\t\t]);\t\t\r\n\t}\r\n\r\n\tgetSteps(){\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tstart(){\r\n\t\tthis._currentStepIndex = 0;\r\n\t\tthis._currentStep = this._steps[this._currentStepIndex];\r\n\t\tthis._observable.fire(\"start\", this._currentStep, this._currentStepIndex);\r\n\t\tthis._observable.fire(\"step\", this._currentStep, this._currentStepIndex);\r\n\t}\r\n\r\n\tstop(){\r\n\t\tthis._observable.fire(\"stop\");\r\n\t\tthis._currentStep = null;\r\n\t\tthis._currentStepIndex = -1;\r\n\t}\t\r\n\r\n\tnext(){\r\n\t\tif (this.hasNext()){\r\n\t\t\tthis._currentStep = this._steps[++this._currentStepIndex];\r\n\t\t\tthis._observable.fire(\"step\", this._currentStep, this._currentStepIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tprev(){\r\n\t\tif (this.hasPrev()){\r\n\t\t\tthis._currentStep = this._steps[--this._currentStepIndex];\r\n\t\t\tthis._observable.fire(\"step\", this._currentStep, this._currentStepIndex);\r\n\t\t}\r\n\t}\r\n\r\n\thasNext(){\r\n\t\treturn this._steps.length > this._currentStepIndex +1;\r\n\t}\r\n\r\n\thasPrev(){\r\n\t\treturn this._currentStepIndex > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Bind widget event\r\n\t * @param {String} event event name\r\n\t * @param {Function} handler event handler\r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\ton(eventName, handler) {\r\n\t\tthis._observable.on(eventName, handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind widget event\r\n\t * @param {String} event event name\r\n\t * @param {Function} [handler] event handler\r\n\t * @returns {Onboard} returns this widget instance\r\n\t */\r\n\toff(eventName, handler) {\r\n\t\tthis._observable.off(eventName, handler);\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._observable.destroy();\r\n\t\tthis._currentStep = null;\r\n\r\n\t\treturn this;\r\n\t}\r\n}","import * as d3 from \"d3\";\r\n\r\n/**\r\n * @class\r\n * @param {Object} options\r\n */\r\nexport default class OnboardKeyHandler {\r\n\tconstructor(options, model) {\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * Onboard options\r\n\t\t */\r\n\t\tthis._options = options;\r\n\t\tthis._model = model;\r\n\t\t\r\n\t\tthis._onStartBinding = this._model.on(\"start\", this._onStart.bind(this));\r\n\t\tthis._onStopBinding = this._model.on(\"stop\", this._onStop.bind(this));\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {OnboarKeyHandler} \r\n\t */\r\n\t_onStart() {\r\n\t\td3.select(document).on(\"keydown.onboard\", this._onKeyDown.bind(this));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {OnboarKeyHandler} \r\n\t */\r\n\t_onKeyDown(){\r\n\t\tif(d3.event.key == \"ArrowLeft\" || d3.event.key == \"Backspace\"){\r\n\t\t\tthis._model.hasPrev()?this._model.prev():this._model.stop();\r\n\t\t} else if (d3.event.key == \"ArrowRight\" || d3.event.key == \"Enter\"){\r\n\t\t\tthis._model.hasNext()?this._model.next():this._model.stop();\r\n\t\t} else if (d3.event.key == \"Escape\"){\r\n\t\t\tthis._model.stop();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @returns {OnboarKeyHandler} \r\n\t */\r\n\t_onStop() {\r\n\t\td3.select(document).on(\"keydown.onboard\", null);\r\n\t\treturn this;\r\n\t}\t\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys Onboard UI  \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._onStop();\r\n\r\n\t\tthis._onStartBinding.destroy();\r\n\t\tthis._onStopBinding.destroy();\r\n\r\n\t\treturn this;\r\n\t}\r\n}","/**\r\n * @public\r\n * Default fill color\r\n */\r\nexport const FILL_COLOR = \"#000000\";\r\n\r\n/**\r\n * @public\r\n * Default fill opacity\r\n */\r\nexport const FILL_OPACITY = 0.25;\r\n\r\n/**\r\n * @public\r\n * Default animation duration\r\n */\r\nexport const ANIMATION_DURATION = 200;\r\n\r\n/**\r\n * @public\r\n * Next text\r\n */\r\nexport const NEXT_TEXT = \"Next\";\r\n\r\n/**\r\n * @public\r\n * Understand text\r\n */\r\nexport const UNDERSTAND_TEXT = \"Got it\";"],"names":["getOptionValue","optionValue","defaultOptionValue","Observable","events","_handlers","reduce","acc","cur","event","handler","this","push","off","handlers","index","indexOf","splice","args","i","length","apply","MaskRenderer","options","model","_options","_containerEl","_svgEl","_stepElements","_rendered","_model","_onStartBinding","on","_onStart","bind","_onStepBinding","_onStep","_onStopBinding","_onStop","selector","d3","document","body","_renderMask","Math","max","documentElement","offsetWidth","clientWidth","offsetHeight","clientHeight","size","_getViewSize","append","attr","style","width","height","_defsEl","_maskEl","_maskBg","_bgEl","fillColor","fillOpacity","_onWindowResize","_this","addEventListener","forEach","element","remove","step","selection","nodes","_this2","_renderStepElement","shape","tagName","_renderPathMask","type","_renderCircleMask","_renderRectangleMask","el","parseFloat","window","getComputedStyle","getPropertyValue","box","getBoundingClientRect","top","scrollTop","left","scrollLeft","_getBox","borderRadius","_getBorderRadius","offset","cx","cy","radius","svgElement","parentElement","_clearSteps","_renderStep","removeEventListener","destroy","PositionResolver","targetBox","windowBox","arrowBox","position","_getTargetPosition","_getLeftWindowPosition","_getTopWindowPosition","_getLeftArrowPosition","_getTopArrowPosition","point","crossPoint","s","join","ArrowRenderer","_positionResolver","_arrowBox","_renderArrow","_arrowEl","node","firstNode","arrowPosition","getArrowPosition","transition","duration","WindowRenderer","_arrowRenderer","_renderWindow","render","_windowEl","_nextBtnEl","_onNextClick","_nextBtnTextEl","html","nextText","classed","_nextBtnIconEl","_prevBtnEl","_onPrevClick","prevText","_titleEl","_bodyEl","_closeEl","_onCloseClick","stop","hasNext","next","prev","title","text","hasPrev","understandText","windowPosition","getWindowPosition","getArrowBox","animationDuration","OnboardRenderer","_observable","_maskRenderer","_windowRenderer","eventName","OnboardModel","_steps","steps","_currentStep","_currentStepIndex","fire","OnboardKeyHandler","_onKeyDown","key","_onboardRenderer","_onboardKeyHandler","start"],"mappings":"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"}